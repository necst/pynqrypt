// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pynqrypt_encrypt_ctr_encrypt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        this_nonce_address0,
        this_nonce_ce0,
        this_nonce_q0,
        pynqrypt_round_keys_address0,
        pynqrypt_round_keys_ce0,
        pynqrypt_round_keys_q0,
        pynqrypt_round_keys_address1,
        pynqrypt_round_keys_ce1,
        pynqrypt_round_keys_q1,
        plaintext_length_dout,
        plaintext_length_num_data_valid,
        plaintext_length_fifo_cap,
        plaintext_length_empty_n,
        plaintext_length_read,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        plaintext_dout,
        plaintext_num_data_valid,
        plaintext_fifo_cap,
        plaintext_empty_n,
        plaintext_read,
        ciphertext_dout,
        ciphertext_num_data_valid,
        ciphertext_fifo_cap,
        ciphertext_empty_n,
        ciphertext_read
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] this_nonce_address0;
output   this_nonce_ce0;
input  [7:0] this_nonce_q0;
output  [7:0] pynqrypt_round_keys_address0;
output   pynqrypt_round_keys_ce0;
input  [7:0] pynqrypt_round_keys_q0;
output  [7:0] pynqrypt_round_keys_address1;
output   pynqrypt_round_keys_ce1;
input  [7:0] pynqrypt_round_keys_q1;
input  [63:0] plaintext_length_dout;
input  [2:0] plaintext_length_num_data_valid;
input  [2:0] plaintext_length_fifo_cap;
input   plaintext_length_empty_n;
output   plaintext_length_read;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [7:0] m_axi_gmem_WDATA;
output  [0:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [7:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [10:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] plaintext_dout;
input  [2:0] plaintext_num_data_valid;
input  [2:0] plaintext_fifo_cap;
input   plaintext_empty_n;
output   plaintext_read;
input  [63:0] ciphertext_dout;
input  [2:0] ciphertext_num_data_valid;
input  [2:0] ciphertext_fifo_cap;
input   ciphertext_empty_n;
output   ciphertext_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg plaintext_length_read;
reg m_axi_gmem_AWVALID;
reg[63:0] m_axi_gmem_AWADDR;
reg[0:0] m_axi_gmem_AWID;
reg[31:0] m_axi_gmem_AWLEN;
reg[2:0] m_axi_gmem_AWSIZE;
reg[1:0] m_axi_gmem_AWBURST;
reg[1:0] m_axi_gmem_AWLOCK;
reg[3:0] m_axi_gmem_AWCACHE;
reg[2:0] m_axi_gmem_AWPROT;
reg[3:0] m_axi_gmem_AWQOS;
reg[3:0] m_axi_gmem_AWREGION;
reg[0:0] m_axi_gmem_AWUSER;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg[0:0] m_axi_gmem_ARID;
reg[31:0] m_axi_gmem_ARLEN;
reg[2:0] m_axi_gmem_ARSIZE;
reg[1:0] m_axi_gmem_ARBURST;
reg[1:0] m_axi_gmem_ARLOCK;
reg[3:0] m_axi_gmem_ARCACHE;
reg[2:0] m_axi_gmem_ARPROT;
reg[3:0] m_axi_gmem_ARQOS;
reg[3:0] m_axi_gmem_ARREGION;
reg[0:0] m_axi_gmem_ARUSER;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;
reg plaintext_read;
reg ciphertext_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    plaintext_length_blk_n;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state3;
reg   [0:0] icmp_ln25_reg_506;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state18;
wire   [0:0] ap_phi_mux_icmp_ln25_pr_phi_fu_194_p4;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state25;
reg   [0:0] icmp_ln25_pr_reg_190;
reg    plaintext_blk_n;
reg    ciphertext_blk_n;
reg   [63:0] ciphertext_read_reg_436;
reg   [63:0] plaintext_read_reg_441;
reg   [63:0] plaintext_length_read_reg_446;
wire   [63:0] xor_ln23_fu_250_p2;
reg   [63:0] xor_ln23_reg_472;
wire   [31:0] xor_ln24_fu_256_p2;
reg   [31:0] xor_ln24_reg_477;
wire   [31:0] select_ln24_fu_306_p3;
reg   [31:0] select_ln24_reg_488;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln23_1_fu_275_p2;
wire   [63:0] add_ln24_1_fu_314_p2;
reg   [63:0] add_ln24_1_reg_494;
wire   [63:0] add_ln24_2_fu_319_p2;
reg   [63:0] add_ln24_2_reg_500;
wire   [0:0] icmp_ln25_fu_324_p2;
wire   [63:0] select_ln23_fu_341_p3;
reg   [63:0] select_ln23_reg_511;
reg   [3:0] block_nonce_address0;
reg    block_nonce_ce0;
reg    block_nonce_we0;
reg   [7:0] block_nonce_d0;
wire   [7:0] block_nonce_q0;
reg   [3:0] block_nonce_address1;
reg    block_nonce_ce1;
reg    block_nonce_we1;
reg   [7:0] block_nonce_d1;
wire   [7:0] block_nonce_q1;
reg   [3:0] block_address0;
reg    block_ce0;
reg    block_we0;
reg   [7:0] block_d0;
wire   [7:0] block_q0;
reg    block_ce1;
wire   [7:0] block_q1;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_ap_start;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_ap_done;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_ap_idle;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_ap_ready;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWVALID;
wire   [63:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWADDR;
wire   [0:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWID;
wire   [31:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWLEN;
wire   [2:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWSIZE;
wire   [1:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWBURST;
wire   [1:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWLOCK;
wire   [3:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWCACHE;
wire   [2:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWPROT;
wire   [3:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWQOS;
wire   [3:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWREGION;
wire   [0:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWUSER;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WVALID;
wire   [7:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WDATA;
wire   [0:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WSTRB;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WLAST;
wire   [0:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WID;
wire   [0:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WUSER;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARVALID;
wire   [63:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARADDR;
wire   [0:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARID;
wire   [31:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARLEN;
wire   [2:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARSIZE;
wire   [1:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARBURST;
wire   [1:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARLOCK;
wire   [3:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARCACHE;
wire   [2:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARPROT;
wire   [3:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARQOS;
wire   [3:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARREGION;
wire   [0:0] grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARUSER;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_RREADY;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_BREADY;
wire   [3:0] grp_ctr_encrypt_Pipeline_1_fu_202_block_r_address0;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_block_r_ce0;
wire    grp_ctr_encrypt_Pipeline_1_fu_202_block_r_we0;
wire   [7:0] grp_ctr_encrypt_Pipeline_1_fu_202_block_r_d0;
wire    grp_ctr_encrypt_Pipeline_2_fu_211_ap_start;
wire    grp_ctr_encrypt_Pipeline_2_fu_211_ap_done;
wire    grp_ctr_encrypt_Pipeline_2_fu_211_ap_idle;
wire    grp_ctr_encrypt_Pipeline_2_fu_211_ap_ready;
wire   [3:0] grp_ctr_encrypt_Pipeline_2_fu_211_this_nonce_address0;
wire    grp_ctr_encrypt_Pipeline_2_fu_211_this_nonce_ce0;
wire   [3:0] grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_address0;
wire    grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_ce0;
wire    grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_we0;
wire   [7:0] grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_d0;
wire    grp_aes_encrypt_block_fu_218_ap_start;
wire    grp_aes_encrypt_block_fu_218_ap_done;
wire    grp_aes_encrypt_block_fu_218_ap_idle;
wire    grp_aes_encrypt_block_fu_218_ap_ready;
wire   [7:0] grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_address0;
wire    grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_ce0;
wire   [7:0] grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_address1;
wire    grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_ce1;
wire   [3:0] grp_aes_encrypt_block_fu_218_state_address0;
wire    grp_aes_encrypt_block_fu_218_state_ce0;
wire    grp_aes_encrypt_block_fu_218_state_we0;
wire   [7:0] grp_aes_encrypt_block_fu_218_state_d0;
wire   [3:0] grp_aes_encrypt_block_fu_218_state_address1;
wire    grp_aes_encrypt_block_fu_218_state_ce1;
wire    grp_aes_encrypt_block_fu_218_state_we1;
wire   [7:0] grp_aes_encrypt_block_fu_218_state_d1;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_idle;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_ready;
wire   [3:0] grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_nonce_address0;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_nonce_ce0;
wire   [3:0] grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_address0;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_ce0;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_we0;
wire   [7:0] grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_d0;
wire   [3:0] grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_address1;
wire    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_ce1;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_ap_start;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_ap_done;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_ap_idle;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_ap_ready;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWVALID;
wire   [63:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWADDR;
wire   [0:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWID;
wire   [31:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWLEN;
wire   [2:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWSIZE;
wire   [1:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWBURST;
wire   [1:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWLOCK;
wire   [3:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWCACHE;
wire   [2:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWPROT;
wire   [3:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWQOS;
wire   [3:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWREGION;
wire   [0:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWUSER;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WVALID;
wire   [7:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WDATA;
wire   [0:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WSTRB;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WLAST;
wire   [0:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WID;
wire   [0:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WUSER;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARVALID;
wire   [63:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARADDR;
wire   [0:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARID;
wire   [31:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARLEN;
wire   [2:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARSIZE;
wire   [1:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARBURST;
wire   [1:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARLOCK;
wire   [3:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARCACHE;
wire   [2:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARPROT;
wire   [3:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARQOS;
wire   [3:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARREGION;
wire   [0:0] grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARUSER;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_RREADY;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_BREADY;
wire   [3:0] grp_ctr_encrypt_Pipeline_4_fu_234_block_r_address0;
wire    grp_ctr_encrypt_Pipeline_4_fu_234_block_r_ce0;
reg    ap_block_state3_io;
wire    ap_CS_fsm_state11;
reg    ap_block_state11_on_subcall_done;
reg    grp_ctr_encrypt_Pipeline_1_fu_202_ap_start_reg;
wire    ap_CS_fsm_state9;
reg   [24:0] ap_NS_fsm;
wire    ap_NS_fsm_state10;
wire    ap_CS_fsm_state10;
reg    grp_ctr_encrypt_Pipeline_2_fu_211_ap_start_reg;
wire    ap_CS_fsm_state12;
reg    grp_aes_encrypt_block_fu_218_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
reg    grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start_reg;
wire    ap_CS_fsm_state17;
reg    grp_ctr_encrypt_Pipeline_4_fu_234_ap_start_reg;
wire    ap_NS_fsm_state19;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg    ap_block_state18_io;
reg    ap_block_state25;
reg   [63:0] i_fu_102;
wire   [63:0] i_5_fu_401_p2;
reg    ap_block_state1;
reg   [63:0] indvars_iv6_fu_106;
wire   [63:0] add_ln23_fu_406_p2;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire   [31:0] trunc_ln23_fu_246_p1;
wire   [63:0] add_ln24_fu_284_p2;
wire   [31:0] trunc_ln24_fu_280_p1;
wire   [31:0] add_ln24_3_fu_295_p2;
wire   [0:0] icmp_ln24_fu_289_p2;
wire   [31:0] xor_ln24_1_fu_300_p2;
wire   [0:0] icmp_ln23_fu_329_p2;
wire   [63:0] xor_ln23_1_fu_335_p2;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 25'd1;
#0 grp_ctr_encrypt_Pipeline_1_fu_202_ap_start_reg = 1'b0;
#0 grp_ctr_encrypt_Pipeline_2_fu_211_ap_start_reg = 1'b0;
#0 grp_aes_encrypt_block_fu_218_ap_start_reg = 1'b0;
#0 grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start_reg = 1'b0;
#0 grp_ctr_encrypt_Pipeline_4_fu_234_ap_start_reg = 1'b0;
end

pynqrypt_encrypt_ctr_encrypt_block_nonce_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
block_nonce_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(block_nonce_address0),
    .ce0(block_nonce_ce0),
    .we0(block_nonce_we0),
    .d0(block_nonce_d0),
    .q0(block_nonce_q0),
    .address1(block_nonce_address1),
    .ce1(block_nonce_ce1),
    .we1(block_nonce_we1),
    .d1(block_nonce_d1),
    .q1(block_nonce_q1)
);

pynqrypt_encrypt_ctr_encrypt_block_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
block_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(block_address0),
    .ce0(block_ce0),
    .we0(block_we0),
    .d0(block_d0),
    .q0(block_q0),
    .address1(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_address1),
    .ce1(block_ce1),
    .q1(block_q1)
);

pynqrypt_encrypt_ctr_encrypt_Pipeline_1 grp_ctr_encrypt_Pipeline_1_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ctr_encrypt_Pipeline_1_fu_202_ap_start),
    .ap_done(grp_ctr_encrypt_Pipeline_1_fu_202_ap_done),
    .ap_idle(grp_ctr_encrypt_Pipeline_1_fu_202_ap_idle),
    .ap_ready(grp_ctr_encrypt_Pipeline_1_fu_202_ap_ready),
    .m_axi_gmem_AWVALID(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RFIFONUM(m_axi_gmem_RFIFONUM),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .add_ln24_2(add_ln24_2_reg_500),
    .block_r_address0(grp_ctr_encrypt_Pipeline_1_fu_202_block_r_address0),
    .block_r_ce0(grp_ctr_encrypt_Pipeline_1_fu_202_block_r_ce0),
    .block_r_we0(grp_ctr_encrypt_Pipeline_1_fu_202_block_r_we0),
    .block_r_d0(grp_ctr_encrypt_Pipeline_1_fu_202_block_r_d0),
    .select_ln23(select_ln23_reg_511)
);

pynqrypt_encrypt_ctr_encrypt_Pipeline_2 grp_ctr_encrypt_Pipeline_2_fu_211(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ctr_encrypt_Pipeline_2_fu_211_ap_start),
    .ap_done(grp_ctr_encrypt_Pipeline_2_fu_211_ap_done),
    .ap_idle(grp_ctr_encrypt_Pipeline_2_fu_211_ap_idle),
    .ap_ready(grp_ctr_encrypt_Pipeline_2_fu_211_ap_ready),
    .this_nonce_address0(grp_ctr_encrypt_Pipeline_2_fu_211_this_nonce_address0),
    .this_nonce_ce0(grp_ctr_encrypt_Pipeline_2_fu_211_this_nonce_ce0),
    .this_nonce_q0(this_nonce_q0),
    .block_nonce_address0(grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_address0),
    .block_nonce_ce0(grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_ce0),
    .block_nonce_we0(grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_we0),
    .block_nonce_d0(grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_d0)
);

pynqrypt_encrypt_aes_encrypt_block grp_aes_encrypt_block_fu_218(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_encrypt_block_fu_218_ap_start),
    .ap_done(grp_aes_encrypt_block_fu_218_ap_done),
    .ap_idle(grp_aes_encrypt_block_fu_218_ap_idle),
    .ap_ready(grp_aes_encrypt_block_fu_218_ap_ready),
    .pynqrypt_round_keys_address0(grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_address0),
    .pynqrypt_round_keys_ce0(grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_ce0),
    .pynqrypt_round_keys_q0(pynqrypt_round_keys_q0),
    .pynqrypt_round_keys_address1(grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_address1),
    .pynqrypt_round_keys_ce1(grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_ce1),
    .pynqrypt_round_keys_q1(pynqrypt_round_keys_q1),
    .state_address0(grp_aes_encrypt_block_fu_218_state_address0),
    .state_ce0(grp_aes_encrypt_block_fu_218_state_ce0),
    .state_we0(grp_aes_encrypt_block_fu_218_state_we0),
    .state_d0(grp_aes_encrypt_block_fu_218_state_d0),
    .state_q0(block_nonce_q0),
    .state_address1(grp_aes_encrypt_block_fu_218_state_address1),
    .state_ce1(grp_aes_encrypt_block_fu_218_state_ce1),
    .state_we1(grp_aes_encrypt_block_fu_218_state_we1),
    .state_d1(grp_aes_encrypt_block_fu_218_state_d1),
    .state_q1(block_nonce_q1)
);

pynqrypt_encrypt_ctr_encrypt_Pipeline_loop_ctr_xor_block grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start),
    .ap_done(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done),
    .ap_idle(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_idle),
    .ap_ready(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_ready),
    .select_ln23(select_ln23_reg_511),
    .block_nonce_address0(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_nonce_address0),
    .block_nonce_ce0(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_nonce_ce0),
    .block_nonce_q0(block_nonce_q0),
    .block_r_address0(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_address0),
    .block_r_ce0(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_ce0),
    .block_r_we0(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_we0),
    .block_r_d0(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_d0),
    .block_r_address1(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_address1),
    .block_r_ce1(grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_ce1),
    .block_r_q1(block_q1)
);

pynqrypt_encrypt_ctr_encrypt_Pipeline_4 grp_ctr_encrypt_Pipeline_4_fu_234(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ctr_encrypt_Pipeline_4_fu_234_ap_start),
    .ap_done(grp_ctr_encrypt_Pipeline_4_fu_234_ap_done),
    .ap_idle(grp_ctr_encrypt_Pipeline_4_fu_234_ap_idle),
    .ap_ready(grp_ctr_encrypt_Pipeline_4_fu_234_ap_ready),
    .m_axi_gmem_AWVALID(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(m_axi_gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(m_axi_gmem_WREADY),
    .m_axi_gmem_WDATA(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(8'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(11'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(m_axi_gmem_BVALID),
    .m_axi_gmem_BREADY(grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(m_axi_gmem_BRESP),
    .m_axi_gmem_BID(m_axi_gmem_BID),
    .m_axi_gmem_BUSER(m_axi_gmem_BUSER),
    .add_ln24_1(add_ln24_1_reg_494),
    .block_r_address0(grp_ctr_encrypt_Pipeline_4_fu_234_block_r_address0),
    .block_r_ce0(grp_ctr_encrypt_Pipeline_4_fu_234_block_r_ce0),
    .block_r_q0(block_q0),
    .select_ln23(select_ln23_reg_511)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_1_fu_275_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_encrypt_block_fu_218_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_aes_encrypt_block_fu_218_ap_start_reg <= 1'b1;
        end else if ((grp_aes_encrypt_block_fu_218_ap_ready == 1'b1)) begin
            grp_aes_encrypt_block_fu_218_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ctr_encrypt_Pipeline_1_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state10) & (1'b1 == ap_CS_fsm_state9))) begin
            grp_ctr_encrypt_Pipeline_1_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_ctr_encrypt_Pipeline_1_fu_202_ap_ready == 1'b1)) begin
            grp_ctr_encrypt_Pipeline_1_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ctr_encrypt_Pipeline_2_fu_211_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
            grp_ctr_encrypt_Pipeline_2_fu_211_ap_start_reg <= 1'b1;
        end else if ((grp_ctr_encrypt_Pipeline_2_fu_211_ap_ready == 1'b1)) begin
            grp_ctr_encrypt_Pipeline_2_fu_211_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ctr_encrypt_Pipeline_4_fu_234_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state19) & (1'b1 == ap_CS_fsm_state18))) begin
            grp_ctr_encrypt_Pipeline_4_fu_234_ap_start_reg <= 1'b1;
        end else if ((grp_ctr_encrypt_Pipeline_4_fu_234_ap_ready == 1'b1)) begin
            grp_ctr_encrypt_Pipeline_4_fu_234_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start_reg <= 1'b1;
        end else if ((grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_ready == 1'b1)) begin
            grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_102 <= 64'd0;
    end else if ((~((icmp_ln25_pr_reg_190 == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
        i_fu_102 <= i_5_fu_401_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1))) begin
        icmp_ln25_pr_reg_190 <= icmp_ln25_reg_506;
    end else if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln25_reg_506 == 1'd0))) begin
        icmp_ln25_pr_reg_190 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvars_iv6_fu_106 <= xor_ln23_fu_250_p2;
    end else if ((~((icmp_ln25_pr_reg_190 == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
        indvars_iv6_fu_106 <= add_ln23_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_1_fu_275_p2 == 1'd1))) begin
        add_ln24_1_reg_494 <= add_ln24_1_fu_314_p2;
        add_ln24_2_reg_500 <= add_ln24_2_fu_319_p2;
        icmp_ln25_reg_506 <= icmp_ln25_fu_324_p2;
        select_ln24_reg_488 <= select_ln24_fu_306_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        ciphertext_read_reg_436 <= ciphertext_dout;
        plaintext_length_read_reg_446 <= plaintext_length_dout;
        plaintext_read_reg_441 <= plaintext_dout;
        xor_ln23_reg_472 <= xor_ln23_fu_250_p2;
        xor_ln24_reg_477 <= xor_ln24_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        select_ln23_reg_511 <= select_ln23_fu_341_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state11_on_subcall_done)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_ctr_encrypt_Pipeline_2_fu_211_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((grp_aes_encrypt_block_fu_218_ap_done == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state18_io) | (grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done == 1'b0))) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_ctr_encrypt_Pipeline_4_fu_234_ap_done == 1'b0)) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln25_pr_reg_190 == 1'd1) & (m_axi_gmem_BVALID == 1'b0))) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3_io)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_1_fu_275_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_1_fu_275_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        block_address0 = grp_ctr_encrypt_Pipeline_4_fu_234_block_r_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        block_address0 = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1))) begin
        block_address0 = grp_ctr_encrypt_Pipeline_1_fu_202_block_r_address0;
    end else begin
        block_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        block_ce0 = grp_ctr_encrypt_Pipeline_4_fu_234_block_r_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        block_ce0 = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1))) begin
        block_ce0 = grp_ctr_encrypt_Pipeline_1_fu_202_block_r_ce0;
    end else begin
        block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        block_ce1 = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_ce1;
    end else begin
        block_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        block_d0 = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_d0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1))) begin
        block_d0 = grp_ctr_encrypt_Pipeline_1_fu_202_block_r_d0;
    end else begin
        block_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        block_nonce_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        block_nonce_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        block_nonce_address0 = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_nonce_address0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_address0 = grp_aes_encrypt_block_fu_218_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        block_nonce_address0 = grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_address0;
    end else begin
        block_nonce_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        block_nonce_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        block_nonce_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_address1 = grp_aes_encrypt_block_fu_218_state_address1;
    end else begin
        block_nonce_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        block_nonce_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        block_nonce_ce0 = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_nonce_ce0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_ce0 = grp_aes_encrypt_block_fu_218_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        block_nonce_ce0 = grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_ce0;
    end else begin
        block_nonce_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        block_nonce_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_ce1 = grp_aes_encrypt_block_fu_218_state_ce1;
    end else begin
        block_nonce_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        block_nonce_d0 = {{i_fu_102[11:4]}};
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        block_nonce_d0 = {{i_fu_102[27:20]}};
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_d0 = grp_aes_encrypt_block_fu_218_state_d0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        block_nonce_d0 = grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_d0;
    end else begin
        block_nonce_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        block_nonce_d1 = {{i_fu_102[19:12]}};
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        block_nonce_d1 = {{i_fu_102[35:28]}};
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_d1 = grp_aes_encrypt_block_fu_218_state_d1;
    end else begin
        block_nonce_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        block_nonce_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_we0 = grp_aes_encrypt_block_fu_218_state_we0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        block_nonce_we0 = grp_ctr_encrypt_Pipeline_2_fu_211_block_nonce_we0;
    end else begin
        block_nonce_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        block_nonce_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        block_nonce_we1 = grp_aes_encrypt_block_fu_218_state_we1;
    end else begin
        block_nonce_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        block_we0 = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_block_r_we0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1))) begin
        block_we0 = grp_ctr_encrypt_Pipeline_1_fu_202_block_r_we0;
    end else begin
        block_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ciphertext_blk_n = ciphertext_empty_n;
    end else begin
        ciphertext_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ciphertext_read = 1'b1;
    end else begin
        ciphertext_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln25_reg_506 == 1'd1))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln25_pr_reg_190 == 1'd1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln25_pr_reg_190 == 1'd1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln25_reg_506 == 1'd1))) begin
        m_axi_gmem_ARADDR = add_ln24_2_reg_500;
    end else if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARADDR = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARADDR;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARBURST = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARBURST;
    end else begin
        m_axi_gmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARCACHE = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARCACHE;
    end else begin
        m_axi_gmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARID = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARID;
    end else begin
        m_axi_gmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln25_reg_506 == 1'd1))) begin
        m_axi_gmem_ARLEN = select_ln24_reg_488;
    end else if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARLEN = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARLEN;
    end else begin
        m_axi_gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARLOCK = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARLOCK;
    end else begin
        m_axi_gmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARPROT = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARPROT;
    end else begin
        m_axi_gmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARQOS = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARQOS;
    end else begin
        m_axi_gmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARREGION = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARREGION;
    end else begin
        m_axi_gmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARSIZE = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARSIZE;
    end else begin
        m_axi_gmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARUSER = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARUSER;
    end else begin
        m_axi_gmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln25_reg_506 == 1'd1))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_ARVALID = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_ARVALID;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state18_io) | (grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state18) & (icmp_ln25_pr_reg_190 == 1'd1))) begin
        m_axi_gmem_AWADDR = add_ln24_1_reg_494;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWADDR = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWADDR;
    end else begin
        m_axi_gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWBURST = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWBURST;
    end else begin
        m_axi_gmem_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWCACHE = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWCACHE;
    end else begin
        m_axi_gmem_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWID = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWID;
    end else begin
        m_axi_gmem_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state18_io) | (grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state18) & (icmp_ln25_pr_reg_190 == 1'd1))) begin
        m_axi_gmem_AWLEN = select_ln24_reg_488;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWLEN = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWLEN;
    end else begin
        m_axi_gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWLOCK = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWLOCK;
    end else begin
        m_axi_gmem_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWPROT = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWPROT;
    end else begin
        m_axi_gmem_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWQOS = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWQOS;
    end else begin
        m_axi_gmem_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWREGION = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWREGION;
    end else begin
        m_axi_gmem_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWSIZE = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWSIZE;
    end else begin
        m_axi_gmem_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWUSER = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWUSER;
    end else begin
        m_axi_gmem_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state18_io) | (grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state18) & (icmp_ln25_pr_reg_190 == 1'd1))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_AWVALID = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_AWVALID;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln25_pr_reg_190 == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25) & (icmp_ln25_pr_reg_190 == 1'd1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_BREADY = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_BREADY;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln25_reg_506 == 1'd1)))) begin
        m_axi_gmem_RREADY = grp_ctr_encrypt_Pipeline_1_fu_202_m_axi_gmem_RREADY;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        m_axi_gmem_WVALID = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WVALID;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        plaintext_blk_n = plaintext_empty_n;
    end else begin
        plaintext_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        plaintext_length_blk_n = plaintext_length_empty_n;
    end else begin
        plaintext_length_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        plaintext_length_read = 1'b1;
    end else begin
        plaintext_length_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        plaintext_read = 1'b1;
    end else begin
        plaintext_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln23_1_fu_275_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln25_reg_506 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b0 == ap_block_state3_io) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln25_reg_506 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((grp_ctr_encrypt_Pipeline_2_fu_211_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_aes_encrypt_block_fu_218_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if ((~((1'b1 == ap_block_state18_io) | (grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state18) & (ap_phi_mux_icmp_ln25_pr_phi_fu_194_p4 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if ((~((1'b1 == ap_block_state18_io) | (grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state18) & (icmp_ln25_pr_reg_190 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((grp_ctr_encrypt_Pipeline_4_fu_234_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if ((~((icmp_ln25_pr_reg_190 == 1'd1) & (m_axi_gmem_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_fu_406_p2 = (indvars_iv6_fu_106 + 64'd16);

assign add_ln24_1_fu_314_p2 = (ciphertext_read_reg_436 + i_fu_102);

assign add_ln24_2_fu_319_p2 = (plaintext_read_reg_441 + i_fu_102);

assign add_ln24_3_fu_295_p2 = (trunc_ln24_fu_280_p1 + xor_ln24_reg_477);

assign add_ln24_fu_284_p2 = (i_fu_102 + xor_ln23_reg_472);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state10 = ap_NS_fsm[32'd9];

assign ap_NS_fsm_state19 = ap_NS_fsm[32'd18];

always @ (*) begin
    ap_block_state1 = ((plaintext_length_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (ciphertext_empty_n == 1'b0) | (plaintext_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state11_on_subcall_done = ((grp_ctr_encrypt_Pipeline_1_fu_202_ap_done == 1'b0) & (icmp_ln25_reg_506 == 1'd1));
end

always @ (*) begin
    ap_block_state18_io = ((m_axi_gmem_AWREADY == 1'b0) & (icmp_ln25_pr_reg_190 == 1'd1));
end

always @ (*) begin
    ap_block_state25 = ((icmp_ln25_pr_reg_190 == 1'd1) & (m_axi_gmem_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = ((m_axi_gmem_ARREADY == 1'b0) & (icmp_ln25_reg_506 == 1'd1));
end

assign ap_phi_mux_icmp_ln25_pr_phi_fu_194_p4 = icmp_ln25_pr_reg_190;

assign grp_aes_encrypt_block_fu_218_ap_start = grp_aes_encrypt_block_fu_218_ap_start_reg;

assign grp_ctr_encrypt_Pipeline_1_fu_202_ap_start = grp_ctr_encrypt_Pipeline_1_fu_202_ap_start_reg;

assign grp_ctr_encrypt_Pipeline_2_fu_211_ap_start = grp_ctr_encrypt_Pipeline_2_fu_211_ap_start_reg;

assign grp_ctr_encrypt_Pipeline_4_fu_234_ap_start = grp_ctr_encrypt_Pipeline_4_fu_234_ap_start_reg;

assign grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start = grp_ctr_encrypt_Pipeline_loop_ctr_xor_block_fu_227_ap_start_reg;

assign i_5_fu_401_p2 = (i_fu_102 + 64'd16);

assign icmp_ln23_1_fu_275_p2 = ((i_fu_102 < plaintext_length_read_reg_446) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_329_p2 = ((indvars_iv6_fu_106 > 64'd18446744073709551599) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_289_p2 = ((add_ln24_fu_284_p2 > 64'd18446744073709551599) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_324_p2 = ((i_fu_102 != plaintext_length_read_reg_446) ? 1'b1 : 1'b0);

assign m_axi_gmem_WDATA = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WDATA;

assign m_axi_gmem_WID = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WID;

assign m_axi_gmem_WLAST = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WLAST;

assign m_axi_gmem_WSTRB = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WSTRB;

assign m_axi_gmem_WUSER = grp_ctr_encrypt_Pipeline_4_fu_234_m_axi_gmem_WUSER;

assign pynqrypt_round_keys_address0 = grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_address0;

assign pynqrypt_round_keys_address1 = grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_address1;

assign pynqrypt_round_keys_ce0 = grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_ce0;

assign pynqrypt_round_keys_ce1 = grp_aes_encrypt_block_fu_218_pynqrypt_round_keys_ce1;

assign select_ln23_fu_341_p3 = ((icmp_ln23_fu_329_p2[0:0] == 1'b1) ? xor_ln23_1_fu_335_p2 : 64'd16);

assign select_ln24_fu_306_p3 = ((icmp_ln24_fu_289_p2[0:0] == 1'b1) ? xor_ln24_1_fu_300_p2 : 32'd16);

assign this_nonce_address0 = grp_ctr_encrypt_Pipeline_2_fu_211_this_nonce_address0;

assign this_nonce_ce0 = grp_ctr_encrypt_Pipeline_2_fu_211_this_nonce_ce0;

assign trunc_ln23_fu_246_p1 = plaintext_length_dout[31:0];

assign trunc_ln24_fu_280_p1 = i_fu_102[31:0];

assign xor_ln23_1_fu_335_p2 = (indvars_iv6_fu_106 ^ 64'd18446744073709551615);

assign xor_ln23_fu_250_p2 = (plaintext_length_dout ^ 64'd18446744073709551615);

assign xor_ln24_1_fu_300_p2 = (32'd4294967295 ^ add_ln24_3_fu_295_p2);

assign xor_ln24_fu_256_p2 = (trunc_ln23_fu_246_p1 ^ 32'd4294967295);

endmodule //pynqrypt_encrypt_ctr_encrypt
