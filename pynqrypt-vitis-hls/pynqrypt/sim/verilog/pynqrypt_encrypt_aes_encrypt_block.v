// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pynqrypt_encrypt_aes_encrypt_block (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        state_address0,
        state_ce0,
        state_we0,
        state_d0,
        state_q0,
        state_address1,
        state_ce1,
        state_we1,
        state_d1,
        state_q1
);

parameter    ap_ST_fsm_state1 = 38'd1;
parameter    ap_ST_fsm_state2 = 38'd2;
parameter    ap_ST_fsm_state3 = 38'd4;
parameter    ap_ST_fsm_state4 = 38'd8;
parameter    ap_ST_fsm_state5 = 38'd16;
parameter    ap_ST_fsm_state6 = 38'd32;
parameter    ap_ST_fsm_state7 = 38'd64;
parameter    ap_ST_fsm_state8 = 38'd128;
parameter    ap_ST_fsm_state9 = 38'd256;
parameter    ap_ST_fsm_state10 = 38'd512;
parameter    ap_ST_fsm_state11 = 38'd1024;
parameter    ap_ST_fsm_state12 = 38'd2048;
parameter    ap_ST_fsm_state13 = 38'd4096;
parameter    ap_ST_fsm_state14 = 38'd8192;
parameter    ap_ST_fsm_state15 = 38'd16384;
parameter    ap_ST_fsm_state16 = 38'd32768;
parameter    ap_ST_fsm_state17 = 38'd65536;
parameter    ap_ST_fsm_state18 = 38'd131072;
parameter    ap_ST_fsm_state19 = 38'd262144;
parameter    ap_ST_fsm_state20 = 38'd524288;
parameter    ap_ST_fsm_state21 = 38'd1048576;
parameter    ap_ST_fsm_state22 = 38'd2097152;
parameter    ap_ST_fsm_state23 = 38'd4194304;
parameter    ap_ST_fsm_state24 = 38'd8388608;
parameter    ap_ST_fsm_state25 = 38'd16777216;
parameter    ap_ST_fsm_state26 = 38'd33554432;
parameter    ap_ST_fsm_state27 = 38'd67108864;
parameter    ap_ST_fsm_state28 = 38'd134217728;
parameter    ap_ST_fsm_state29 = 38'd268435456;
parameter    ap_ST_fsm_state30 = 38'd536870912;
parameter    ap_ST_fsm_state31 = 38'd1073741824;
parameter    ap_ST_fsm_state32 = 38'd2147483648;
parameter    ap_ST_fsm_state33 = 38'd4294967296;
parameter    ap_ST_fsm_state34 = 38'd8589934592;
parameter    ap_ST_fsm_state35 = 38'd17179869184;
parameter    ap_ST_fsm_state36 = 38'd34359738368;
parameter    ap_ST_fsm_state37 = 38'd68719476736;
parameter    ap_ST_fsm_state38 = 38'd137438953472;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] state_address0;
output   state_ce0;
output   state_we0;
output  [7:0] state_d0;
input  [7:0] state_q0;
output  [3:0] state_address1;
output   state_ce1;
output   state_we1;
output  [7:0] state_d1;
input  [7:0] state_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] state_address0;
reg state_ce0;
reg state_we0;
reg[7:0] state_d0;
reg[3:0] state_address1;
reg state_ce1;
reg state_we1;
reg[7:0] state_d1;

(* fsm_encoding = "none" *) reg   [37:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] crypto_aes_sbox_address0;
reg    crypto_aes_sbox_ce0;
wire   [7:0] crypto_aes_sbox_q0;
reg   [7:0] crypto_aes_sbox_address1;
reg    crypto_aes_sbox_ce1;
wire   [7:0] crypto_aes_sbox_q1;
reg   [7:0] reg_642;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state9;
reg   [7:0] reg_647;
wire    ap_CS_fsm_state10;
wire   [3:0] state_addr_reg_1073;
reg   [7:0] state_load_reg_1078;
wire    ap_CS_fsm_state2;
wire   [3:0] state_addr_1_reg_1083;
wire   [3:0] state_addr_2_reg_1088;
reg   [7:0] state_load_3_reg_1105;
wire    ap_CS_fsm_state4;
reg   [7:0] state_load_4_reg_1110;
reg   [7:0] state_load_5_reg_1127;
wire    ap_CS_fsm_state5;
reg   [7:0] state_load_6_reg_1132;
reg   [7:0] state_load_7_reg_1149;
wire    ap_CS_fsm_state6;
reg   [7:0] state_load_8_reg_1154;
reg   [7:0] state_load_9_reg_1171;
wire    ap_CS_fsm_state7;
reg   [7:0] state_load_10_reg_1176;
reg   [7:0] state_load_11_reg_1193;
wire    ap_CS_fsm_state8;
reg   [7:0] state_load_12_reg_1198;
reg   [7:0] state_load_14_reg_1215;
wire   [7:0] xor_ln233_fu_745_p2;
reg   [7:0] xor_ln233_reg_1226;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
reg   [3:0] temp_address0;
reg    temp_ce0;
reg    temp_we0;
wire   [7:0] temp_q0;
reg   [3:0] temp_address1;
reg    temp_ce1;
wire   [7:0] temp_q1;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_done;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_idle;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_ready;
wire   [3:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_address0;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_ce0;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_we0;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_d0;
wire   [3:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_address1;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_ce1;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_we1;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_d1;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_p_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_p_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_1_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_1_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_2_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_2_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_3_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_3_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_4_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_4_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_5_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_5_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_6_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_6_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_7_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_7_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_8_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_8_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_9_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_9_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_10_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_10_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_11_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_11_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_12_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_12_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_13_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_13_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_14_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_14_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_15_phi_out;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_15_phi_out_ap_vld;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_address0;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_ce0;
wire   [7:0] grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_address1;
wire    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_ce1;
wire    grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start;
wire    grp_aes_encrypt_block_Pipeline_2_fu_628_ap_done;
wire    grp_aes_encrypt_block_Pipeline_2_fu_628_ap_idle;
wire    grp_aes_encrypt_block_Pipeline_2_fu_628_ap_ready;
wire   [3:0] grp_aes_encrypt_block_Pipeline_2_fu_628_state_address0;
wire    grp_aes_encrypt_block_Pipeline_2_fu_628_state_ce0;
wire   [3:0] grp_aes_encrypt_block_Pipeline_2_fu_628_temp_address0;
wire    grp_aes_encrypt_block_Pipeline_2_fu_628_temp_ce0;
wire    grp_aes_encrypt_block_Pipeline_2_fu_628_temp_we0;
wire   [7:0] grp_aes_encrypt_block_Pipeline_2_fu_628_temp_d0;
reg    grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start_reg;
wire    ap_CS_fsm_state18;
reg    grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start_reg;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire   [63:0] zext_ln72_fu_757_p1;
wire   [63:0] zext_ln72_1_fu_762_p1;
wire   [63:0] zext_ln72_2_fu_773_p1;
wire   [63:0] zext_ln72_3_fu_778_p1;
wire   [63:0] zext_ln72_4_fu_789_p1;
wire   [63:0] zext_ln72_5_fu_794_p1;
wire   [63:0] zext_ln72_6_fu_805_p1;
wire   [63:0] zext_ln72_7_fu_810_p1;
wire   [63:0] zext_ln72_8_fu_821_p1;
wire   [63:0] zext_ln72_9_fu_826_p1;
wire   [63:0] zext_ln72_10_fu_837_p1;
wire   [63:0] zext_ln72_11_fu_842_p1;
wire   [63:0] zext_ln72_12_fu_853_p1;
wire   [63:0] zext_ln72_13_fu_858_p1;
wire   [63:0] zext_ln72_14_fu_869_p1;
wire   [63:0] zext_ln72_15_fu_874_p1;
wire   [7:0] xor_ln233_1_fu_651_p2;
wire   [7:0] xor_ln233_2_fu_658_p2;
wire   [7:0] xor_ln233_3_fu_665_p2;
wire    ap_CS_fsm_state11;
wire   [7:0] xor_ln233_4_fu_671_p2;
wire   [7:0] xor_ln233_5_fu_677_p2;
wire    ap_CS_fsm_state12;
wire   [7:0] xor_ln233_6_fu_683_p2;
wire   [7:0] xor_ln233_7_fu_689_p2;
wire    ap_CS_fsm_state13;
wire   [7:0] xor_ln233_8_fu_695_p2;
wire   [7:0] xor_ln233_9_fu_701_p2;
wire    ap_CS_fsm_state14;
wire   [7:0] xor_ln233_10_fu_707_p2;
wire   [7:0] xor_ln233_11_fu_713_p2;
wire    ap_CS_fsm_state15;
wire   [7:0] xor_ln233_12_fu_719_p2;
wire   [7:0] xor_ln233_13_fu_725_p2;
wire    ap_CS_fsm_state16;
wire   [7:0] xor_ln233_14_fu_732_p2;
wire   [7:0] xor_ln233_15_fu_738_p2;
wire    ap_CS_fsm_state27;
wire   [7:0] xor_ln233_16_fu_879_p2;
wire   [7:0] grp_fu_635_p2;
wire   [7:0] xor_ln233_18_fu_886_p2;
wire   [7:0] xor_ln233_20_fu_893_p2;
wire   [7:0] xor_ln233_21_fu_900_p2;
wire   [7:0] xor_ln233_22_fu_907_p2;
wire   [7:0] xor_ln233_23_fu_914_p2;
wire   [7:0] xor_ln233_24_fu_921_p2;
wire   [7:0] xor_ln233_25_fu_928_p2;
wire   [7:0] xor_ln233_26_fu_935_p2;
wire   [7:0] xor_ln233_27_fu_942_p2;
wire   [7:0] xor_ln233_28_fu_949_p2;
wire   [7:0] xor_ln233_29_fu_956_p2;
wire    ap_CS_fsm_state38;
wire   [7:0] xor_ln233_30_fu_963_p2;
wire   [7:0] xor_ln233_31_fu_970_p2;
reg   [37:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 38'd1;
#0 grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start_reg = 1'b0;
#0 grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start_reg = 1'b0;
end

pynqrypt_encrypt_aes_encrypt_block_crypto_aes_sbox_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
crypto_aes_sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(crypto_aes_sbox_address0),
    .ce0(crypto_aes_sbox_ce0),
    .q0(crypto_aes_sbox_q0),
    .address1(crypto_aes_sbox_address1),
    .ce1(crypto_aes_sbox_ce1),
    .q1(crypto_aes_sbox_q1)
);

pynqrypt_encrypt_aes_encrypt_block_temp_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_address0),
    .ce0(temp_ce0),
    .we0(temp_we0),
    .d0(grp_aes_encrypt_block_Pipeline_2_fu_628_temp_d0),
    .q0(temp_q0),
    .address1(temp_address1),
    .ce1(temp_ce1),
    .q1(temp_q1)
);

pynqrypt_encrypt_aes_encrypt_block_Pipeline_loop_aes_encrypt_block grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start),
    .ap_done(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_done),
    .ap_idle(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_idle),
    .ap_ready(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_ready),
    .xor_ln233(xor_ln233_reg_1226),
    .state_address0(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_address0),
    .state_ce0(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_ce0),
    .state_we0(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_we0),
    .state_d0(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_d0),
    .state_q0(state_q0),
    .state_address1(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_address1),
    .state_ce1(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_ce1),
    .state_we1(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_we1),
    .state_d1(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_d1),
    .state_q1(state_q1),
    .p_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_p_out),
    .p_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_p_out_ap_vld),
    .conv6_i36_1_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_1_phi_out),
    .conv6_i36_1_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_1_phi_out_ap_vld),
    .conv6_i36_2_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_2_phi_out),
    .conv6_i36_2_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_2_phi_out_ap_vld),
    .conv6_i36_3_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_3_phi_out),
    .conv6_i36_3_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_3_phi_out_ap_vld),
    .conv6_i36_4_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_4_phi_out),
    .conv6_i36_4_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_4_phi_out_ap_vld),
    .conv6_i36_5_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_5_phi_out),
    .conv6_i36_5_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_5_phi_out_ap_vld),
    .conv6_i36_6_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_6_phi_out),
    .conv6_i36_6_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_6_phi_out_ap_vld),
    .conv6_i36_7_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_7_phi_out),
    .conv6_i36_7_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_7_phi_out_ap_vld),
    .conv6_i36_8_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_8_phi_out),
    .conv6_i36_8_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_8_phi_out_ap_vld),
    .conv6_i36_9_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_9_phi_out),
    .conv6_i36_9_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_9_phi_out_ap_vld),
    .conv6_i36_10_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_10_phi_out),
    .conv6_i36_10_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_10_phi_out_ap_vld),
    .conv6_i36_11_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_11_phi_out),
    .conv6_i36_11_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_11_phi_out_ap_vld),
    .conv6_i36_12_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_12_phi_out),
    .conv6_i36_12_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_12_phi_out_ap_vld),
    .conv6_i36_13_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_13_phi_out),
    .conv6_i36_13_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_13_phi_out_ap_vld),
    .conv6_i36_14_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_14_phi_out),
    .conv6_i36_14_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_14_phi_out_ap_vld),
    .conv6_i36_15_phi_out(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_15_phi_out),
    .conv6_i36_15_phi_out_ap_vld(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_15_phi_out_ap_vld),
    .crypto_aes_sbox_address0(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_address0),
    .crypto_aes_sbox_ce0(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_ce0),
    .crypto_aes_sbox_q0(crypto_aes_sbox_q0),
    .crypto_aes_sbox_address1(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_address1),
    .crypto_aes_sbox_ce1(grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_ce1),
    .crypto_aes_sbox_q1(crypto_aes_sbox_q1)
);

pynqrypt_encrypt_aes_encrypt_block_Pipeline_2 grp_aes_encrypt_block_Pipeline_2_fu_628(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start),
    .ap_done(grp_aes_encrypt_block_Pipeline_2_fu_628_ap_done),
    .ap_idle(grp_aes_encrypt_block_Pipeline_2_fu_628_ap_idle),
    .ap_ready(grp_aes_encrypt_block_Pipeline_2_fu_628_ap_ready),
    .state_address0(grp_aes_encrypt_block_Pipeline_2_fu_628_state_address0),
    .state_ce0(grp_aes_encrypt_block_Pipeline_2_fu_628_state_ce0),
    .state_q0(state_q0),
    .temp_address0(grp_aes_encrypt_block_Pipeline_2_fu_628_temp_address0),
    .temp_ce0(grp_aes_encrypt_block_Pipeline_2_fu_628_temp_ce0),
    .temp_we0(grp_aes_encrypt_block_Pipeline_2_fu_628_temp_we0),
    .temp_d0(grp_aes_encrypt_block_Pipeline_2_fu_628_temp_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start_reg <= 1'b1;
        end else if ((grp_aes_encrypt_block_Pipeline_2_fu_628_ap_ready == 1'b1)) begin
            grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start_reg <= 1'b1;
        end else if ((grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_ready == 1'b1)) begin
            grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_642 <= state_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_642 <= state_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_647 <= state_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        state_load_10_reg_1176 <= state_q1;
        state_load_9_reg_1171 <= state_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        state_load_11_reg_1193 <= state_q0;
        state_load_12_reg_1198 <= state_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        state_load_14_reg_1215 <= state_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        state_load_3_reg_1105 <= state_q0;
        state_load_4_reg_1110 <= state_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        state_load_5_reg_1127 <= state_q0;
        state_load_6_reg_1132 <= state_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        state_load_7_reg_1149 <= state_q0;
        state_load_8_reg_1154 <= state_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        state_load_reg_1078 <= state_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        xor_ln233_reg_1226 <= xor_ln233_fu_745_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_done == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

always @ (*) begin
    if ((grp_aes_encrypt_block_Pipeline_2_fu_628_ap_done == 1'b0)) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        crypto_aes_sbox_address0 = zext_ln72_15_fu_874_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        crypto_aes_sbox_address0 = zext_ln72_13_fu_858_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        crypto_aes_sbox_address0 = zext_ln72_11_fu_842_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        crypto_aes_sbox_address0 = zext_ln72_9_fu_826_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        crypto_aes_sbox_address0 = zext_ln72_7_fu_810_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        crypto_aes_sbox_address0 = zext_ln72_5_fu_794_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        crypto_aes_sbox_address0 = zext_ln72_3_fu_778_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        crypto_aes_sbox_address0 = zext_ln72_1_fu_762_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        crypto_aes_sbox_address0 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_address0;
    end else begin
        crypto_aes_sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        crypto_aes_sbox_address1 = zext_ln72_14_fu_869_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        crypto_aes_sbox_address1 = zext_ln72_12_fu_853_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        crypto_aes_sbox_address1 = zext_ln72_10_fu_837_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        crypto_aes_sbox_address1 = zext_ln72_8_fu_821_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        crypto_aes_sbox_address1 = zext_ln72_6_fu_805_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        crypto_aes_sbox_address1 = zext_ln72_4_fu_789_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        crypto_aes_sbox_address1 = zext_ln72_2_fu_773_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        crypto_aes_sbox_address1 = zext_ln72_fu_757_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        crypto_aes_sbox_address1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_address1;
    end else begin
        crypto_aes_sbox_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        crypto_aes_sbox_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        crypto_aes_sbox_ce0 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_ce0;
    end else begin
        crypto_aes_sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        crypto_aes_sbox_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        crypto_aes_sbox_ce1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_crypto_aes_sbox_ce1;
    end else begin
        crypto_aes_sbox_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state20))) begin
        state_address0 = state_addr_reg_1073;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state16))) begin
        state_address0 = 64'd14;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state26))) begin
        state_address0 = 64'd12;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state25))) begin
        state_address0 = 64'd10;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24))) begin
        state_address0 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23))) begin
        state_address0 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state22))) begin
        state_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state21))) begin
        state_address0 = state_addr_2_reg_1088;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        state_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        state_address0 = grp_aes_encrypt_block_Pipeline_2_fu_628_state_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_address0 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_address0;
    end else begin
        state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state16))) begin
        state_address1 = 64'd15;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state26))) begin
        state_address1 = 64'd13;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state25))) begin
        state_address1 = 64'd11;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state24))) begin
        state_address1 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23))) begin
        state_address1 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state22))) begin
        state_address1 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state21))) begin
        state_address1 = 64'd3;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state20))) begin
        state_address1 = state_addr_1_reg_1083;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        state_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        state_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        state_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        state_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        state_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        state_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        state_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_address1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_address1;
    end else begin
        state_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        state_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        state_ce0 = grp_aes_encrypt_block_Pipeline_2_fu_628_state_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_ce0 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_ce0;
    end else begin
        state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        state_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_ce1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_ce1;
    end else begin
        state_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        state_d0 = xor_ln233_30_fu_963_p2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        state_d0 = xor_ln233_28_fu_949_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        state_d0 = xor_ln233_26_fu_935_p2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        state_d0 = xor_ln233_24_fu_921_p2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        state_d0 = xor_ln233_22_fu_907_p2;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        state_d0 = xor_ln233_20_fu_893_p2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        state_d0 = xor_ln233_18_fu_886_p2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        state_d0 = xor_ln233_16_fu_879_p2;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        state_d0 = crypto_aes_sbox_q1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        state_d0 = xor_ln233_14_fu_732_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        state_d0 = xor_ln233_12_fu_719_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_d0 = xor_ln233_10_fu_707_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_d0 = xor_ln233_8_fu_695_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_d0 = xor_ln233_6_fu_683_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_d0 = xor_ln233_4_fu_671_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_d0 = xor_ln233_2_fu_658_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_d0 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_d0;
    end else begin
        state_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        state_d1 = xor_ln233_31_fu_970_p2;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        state_d1 = xor_ln233_29_fu_956_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        state_d1 = xor_ln233_27_fu_942_p2;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        state_d1 = xor_ln233_25_fu_928_p2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        state_d1 = xor_ln233_23_fu_914_p2;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        state_d1 = xor_ln233_21_fu_900_p2;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31))) begin
        state_d1 = grp_fu_635_p2;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        state_d1 = crypto_aes_sbox_q0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        state_d1 = xor_ln233_15_fu_738_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        state_d1 = xor_ln233_13_fu_725_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        state_d1 = xor_ln233_11_fu_713_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        state_d1 = xor_ln233_9_fu_701_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        state_d1 = xor_ln233_7_fu_689_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        state_d1 = xor_ln233_5_fu_677_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        state_d1 = xor_ln233_3_fu_665_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        state_d1 = xor_ln233_1_fu_651_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_d1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_d1;
    end else begin
        state_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        state_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_we0 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_we0;
    end else begin
        state_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        state_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        state_we1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_state_we1;
    end else begin
        state_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        temp_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        temp_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        temp_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        temp_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        temp_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        temp_address0 = grp_aes_encrypt_block_Pipeline_2_fu_628_temp_address0;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        temp_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        temp_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        temp_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        temp_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        temp_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_address1 = 64'd0;
    end else begin
        temp_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        temp_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        temp_ce0 = grp_aes_encrypt_block_Pipeline_2_fu_628_temp_ce0;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        temp_ce1 = 1'b1;
    end else begin
        temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        temp_we0 = grp_aes_encrypt_block_Pipeline_2_fu_628_temp_we0;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_aes_encrypt_block_Pipeline_2_fu_628_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start = grp_aes_encrypt_block_Pipeline_2_fu_628_ap_start_reg;

assign grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_ap_start_reg;

assign grp_fu_635_p2 = (temp_q0 ^ 8'd73);

assign state_addr_1_reg_1083 = 64'd1;

assign state_addr_2_reg_1088 = 64'd2;

assign state_addr_reg_1073 = 64'd0;

assign xor_ln233_10_fu_707_p2 = (state_load_10_reg_1176 ^ 8'd177);

assign xor_ln233_11_fu_713_p2 = (state_load_11_reg_1193 ^ 8'd68);

assign xor_ln233_12_fu_719_p2 = (state_load_12_reg_1198 ^ 8'd75);

assign xor_ln233_13_fu_725_p2 = (reg_642 ^ 8'd130);

assign xor_ln233_14_fu_732_p2 = (state_load_14_reg_1215 ^ 8'd2);

assign xor_ln233_15_fu_738_p2 = (reg_647 ^ 8'd150);

assign xor_ln233_16_fu_879_p2 = (temp_q1 ^ 8'd46);

assign xor_ln233_18_fu_886_p2 = (temp_q1 ^ 8'd169);

assign xor_ln233_1_fu_651_p2 = (reg_642 ^ 8'd114);

assign xor_ln233_20_fu_893_p2 = (temp_q1 ^ 8'd78);

assign xor_ln233_21_fu_900_p2 = (temp_q0 ^ 8'd7);

assign xor_ln233_22_fu_907_p2 = (temp_q1 ^ 8'd37);

assign xor_ln233_23_fu_914_p2 = (temp_q0 ^ 8'd146);

assign xor_ln233_24_fu_921_p2 = (temp_q1 ^ 8'd253);

assign xor_ln233_25_fu_928_p2 = (temp_q0 ^ 8'd117);

assign xor_ln233_26_fu_935_p2 = (temp_q1 ^ 8'd74);

assign xor_ln233_27_fu_942_p2 = (temp_q0 ^ 8'd145);

assign xor_ln233_28_fu_949_p2 = (temp_q1 ^ 8'd107);

assign xor_ln233_29_fu_956_p2 = (temp_q0 ^ 8'd223);

assign xor_ln233_2_fu_658_p2 = (reg_647 ^ 8'd54);

assign xor_ln233_30_fu_963_p2 = (temp_q1 ^ 8'd109);

assign xor_ln233_31_fu_970_p2 = (temp_q0 ^ 8'd89);

assign xor_ln233_3_fu_665_p2 = (state_load_3_reg_1105 ^ 8'd124);

assign xor_ln233_4_fu_671_p2 = (state_load_4_reg_1110 ^ 8'd70);

assign xor_ln233_5_fu_677_p2 = (state_load_5_reg_1127 ^ 8'd77);

assign xor_ln233_6_fu_683_p2 = (state_load_6_reg_1132 ^ 8'd138);

assign xor_ln233_7_fu_689_p2 = (state_load_7_reg_1149 ^ 8'd161);

assign xor_ln233_8_fu_695_p2 = (state_load_8_reg_1154 ^ 8'd126);

assign xor_ln233_9_fu_701_p2 = (state_load_9_reg_1171 ^ 8'd164);

assign xor_ln233_fu_745_p2 = (state_load_reg_1078 ^ 8'd105);

assign zext_ln72_10_fu_837_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_10_phi_out;

assign zext_ln72_11_fu_842_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_11_phi_out;

assign zext_ln72_12_fu_853_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_12_phi_out;

assign zext_ln72_13_fu_858_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_13_phi_out;

assign zext_ln72_14_fu_869_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_14_phi_out;

assign zext_ln72_15_fu_874_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_15_phi_out;

assign zext_ln72_1_fu_762_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_1_phi_out;

assign zext_ln72_2_fu_773_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_2_phi_out;

assign zext_ln72_3_fu_778_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_3_phi_out;

assign zext_ln72_4_fu_789_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_4_phi_out;

assign zext_ln72_5_fu_794_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_5_phi_out;

assign zext_ln72_6_fu_805_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_6_phi_out;

assign zext_ln72_7_fu_810_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_7_phi_out;

assign zext_ln72_8_fu_821_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_8_phi_out;

assign zext_ln72_9_fu_826_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_conv6_i36_9_phi_out;

assign zext_ln72_fu_757_p1 = grp_aes_encrypt_block_Pipeline_loop_aes_encrypt_block_fu_601_p_out;

endmodule //pynqrypt_encrypt_aes_encrypt_block
