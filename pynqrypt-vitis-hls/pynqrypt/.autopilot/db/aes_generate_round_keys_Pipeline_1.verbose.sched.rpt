

================================================================
== Vitis HLS Report for 'aes_generate_round_keys_Pipeline_1'
================================================================
* Date:           Fri Dec  9 00:45:18 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        pynqrypt-vitis-hls
* Solution:       pynqrypt (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020i-clg400-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.576 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       18|       18|  0.180 us|  0.180 us|   18|   18|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       16|       16|         2|          1|          1|    16|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.36>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%loop_index = alloca i32 1"   --->   Operation 5 'alloca' 'loop_index' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (1.58ns)   --->   "%store_ln0 = store i5 0, i5 %loop_index"   --->   Operation 6 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop"   --->   Operation 7 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%loop_index_load = load i5 %loop_index"   --->   Operation 8 'load' 'loop_index_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 9 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.36ns)   --->   "%exitcond8228 = icmp_eq  i5 %loop_index_load, i5 16"   --->   Operation 10 'icmp' 'exitcond8228' <Predicate = true> <Delay = 1.36> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.78ns)   --->   "%empty_122 = add i5 %loop_index_load, i5 1"   --->   Operation 12 'add' 'empty_122' <Predicate = true> <Delay = 1.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond8228, void %load-store-loop.split, void %for.inc.preheader.exitStub"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%loop_index_cast = zext i5 %loop_index_load"   --->   Operation 14 'zext' 'loop_index_cast' <Predicate = (!exitcond8228)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%this_key_addr = getelementptr i8 %this_key, i64 0, i64 %loop_index_cast"   --->   Operation 15 'getelementptr' 'this_key_addr' <Predicate = (!exitcond8228)> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (2.32ns)   --->   "%this_key_load = load i4 %this_key_addr"   --->   Operation 16 'load' 'this_key_load' <Predicate = (!exitcond8228)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 17 [1/1] (1.58ns)   --->   "%store_ln0 = store i5 %empty_122, i5 %loop_index"   --->   Operation 17 'store' 'store_ln0' <Predicate = (!exitcond8228)> <Delay = 1.58>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 22 'ret' 'ret_ln0' <Predicate = (exitcond8228)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.57>
ST_2 : Operation 18 [1/2] (2.32ns)   --->   "%this_key_load = load i4 %this_key_addr"   --->   Operation 18 'load' 'this_key_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %loop_index_cast"   --->   Operation 19 'getelementptr' 'pynqrypt_round_keys_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (3.25ns)   --->   "%store_ln0 = store i8 %this_key_load, i8 %pynqrypt_round_keys_addr"   --->   Operation 20 'store' 'store_ln0' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop"   --->   Operation 21 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.37ns
The critical path consists of the following:
	'alloca' operation ('loop_index') [3]  (0 ns)
	'load' operation ('loop_index_load') on local variable 'loop_index' [7]  (0 ns)
	'add' operation ('empty_122') [11]  (1.78 ns)
	'store' operation ('store_ln0') of variable 'empty_122' on local variable 'loop_index' [19]  (1.59 ns)

 <State 2>: 5.58ns
The critical path consists of the following:
	'load' operation ('this_key_load') on array 'this_key' [16]  (2.32 ns)
	'store' operation ('store_ln0') of variable 'this_key_load' on array 'pynqrypt_round_keys' [18]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
