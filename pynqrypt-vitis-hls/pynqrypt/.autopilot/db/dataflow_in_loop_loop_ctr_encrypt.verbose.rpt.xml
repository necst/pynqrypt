<profile>

<section name = "Vitis HLS Report for 'dataflow_in_loop_loop_ctr_encrypt'" level="0">
<item name = "Date">Sat Dec 10 14:02:52 2022
</item>
<item name = "Version">2022.2 (Build 3670227 on Oct 13 2022)</item>
<item name = "Project">pynqrypt-vitis-hls</item>
<item name = "Solution">pynqrypt (Vivado IP Flow Target)</item>
<item name = "Product family">zynq</item>
<item name = "Target device">xc7z020i-clg400-1L</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">10.00 ns, 7.300 ns, 2.70 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">45, 45, 0.450 us, 0.450 us, 46, 46, dataflow</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
<column name="entry_proc_U0">entry_proc, 0, 0, 0 ns, 0 ns, 0, 0, no</column>
<column name="ctr_compute_nonce_U0">ctr_compute_nonce, 0, 0, 0 ns, 0 ns, 0, 0, no</column>
<column name="assign_swap_endianness_U0">assign_swap_endianness, 8, 8, 80.000 ns, 80.000 ns, 8, 8, no</column>
<column name="aes_encrypt_block_U0">aes_encrypt_block, 45, 45, 0.450 us, 0.450 us, 45, 45, no</column>
<column name="ctr_xor_block_U0">ctr_xor_block, 0, 0, 0 ns, 0 ns, 0, 0, no</column>
<column name="assign_swap_endianness_1_U0">assign_swap_endianness_1, 7, 7, 70.000 ns, 70.000 ns, 7, 7, no</column>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 22, -</column>
<column name="FIFO">-, -, 594, 407, -</column>
<column name="Instance">-, -, 1710, 109601, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 36, -</column>
<column name="Register">-, -, 4, -, -</column>
<specialColumn name="Available">280, 220, 106400, 53200, 0</specialColumn>
<specialColumn name="Utilization (%)">0, 0, 2, 206, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="aes_encrypt_block_U0">aes_encrypt_block, 0, 0, 1053, 109067, 0</column>
<column name="assign_swap_endianness_U0">assign_swap_endianness, 0, 0, 198, 171, 0</column>
<column name="assign_swap_endianness_1_U0">assign_swap_endianness_1, 0, 0, 197, 175, 0</column>
<column name="ctr_compute_nonce_U0">ctr_compute_nonce, 0, 0, 130, 20, 0</column>
<column name="ctr_xor_block_U0">ctr_xor_block, 0, 0, 130, 148, 0</column>
<column name="entry_proc_U0">entry_proc, 0, 0, 2, 20, 0</column>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
<column name="block_V1_out_tmp_channel_U">0, 99, 0, -, 3, 128, 384</column>
<column name="block_V_U">0, 99, 0, -, 2, 128, 256</column>
<column name="block_nonce_V_U">0, 99, 0, -, 2, 128, 256</column>
<column name="ciphertext_c_U">0, 99, 0, -, 5, 64, 320</column>
<column name="i_c_U">0, 99, 0, -, 4, 60, 240</column>
<column name="tmp_U">0, 99, 0, -, 2, 128, 256</column>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="aes_encrypt_block_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ap_idle">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_ready">and, 0, 0, 2, 1, 1</column>
<column name="assign_swap_endianness_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ctr_compute_nonce_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ctr_xor_block_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="entry_proc_U0_ap_start">and, 0, 0, 2, 1, 1</column>
<column name="ap_sync_aes_encrypt_block_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_assign_swap_endianness_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_ctr_compute_nonce_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
<column name="ap_sync_entry_proc_U0_ap_ready">or, 0, 0, 2, 1, 1</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="ap_sync_reg_aes_encrypt_block_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_assign_swap_endianness_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_ctr_compute_nonce_U0_ap_ready">9, 2, 1, 2</column>
<column name="ap_sync_reg_entry_proc_U0_ap_ready">9, 2, 1, 2</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_sync_reg_aes_encrypt_block_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_assign_swap_endianness_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_ctr_compute_nonce_U0_ap_ready">1, 0, 1, 0</column>
<column name="ap_sync_reg_entry_proc_U0_ap_ready">1, 0, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="m_axi_gmem_AWVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWADDR">out, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLEN">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_AWUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WDATA">out, 128, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WSTRB">out, 16, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WLAST">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_WUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARVALID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREADY">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARADDR">out, 64, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARID">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLEN">out, 32, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARSIZE">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARBURST">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARLOCK">out, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARCACHE">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARPROT">out, 3, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARQOS">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARREGION">out, 4, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_ARUSER">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RDATA">in, 128, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RLAST">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RFIFONUM">in, 9, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RUSER">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_RRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BVALID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BREADY">out, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BRESP">in, 2, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BID">in, 1, m_axi, gmem, pointer</column>
<column name="m_axi_gmem_BUSER">in, 1, m_axi, gmem, pointer</column>
<column name="i">in, 60, ap_none, i, scalar</column>
<column name="i_ap_vld">in, 1, ap_none, i, scalar</column>
<column name="plaintext">in, 64, ap_none, plaintext, scalar</column>
<column name="plaintext_ap_vld">in, 1, ap_none, plaintext, scalar</column>
<column name="p_read">in, 96, ap_none, p_read, scalar</column>
<column name="p_read_ap_vld">in, 1, ap_none, p_read, scalar</column>
<column name="this_round_keys_address0">out, 4, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_ce0">out, 1, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_d0">out, 128, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_q0">in, 128, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_we0">out, 1, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_address1">out, 4, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_ce1">out, 1, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_d1">out, 128, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_q1">in, 128, ap_memory, this_round_keys, array</column>
<column name="this_round_keys_we1">out, 1, ap_memory, this_round_keys, array</column>
<column name="ciphertext">in, 64, ap_none, ciphertext, scalar</column>
<column name="ciphertext_ap_vld">in, 1, ap_none, ciphertext, scalar</column>
<column name="ap_clk">in, 1, ap_ctrl_hs, dataflow_in_loop_loop_ctr_encrypt, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, dataflow_in_loop_loop_ctr_encrypt, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, dataflow_in_loop_loop_ctr_encrypt, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, dataflow_in_loop_loop_ctr_encrypt, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, dataflow_in_loop_loop_ctr_encrypt, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, dataflow_in_loop_loop_ctr_encrypt, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, dataflow_in_loop_loop_ctr_encrypt, return value</column>
</table>
</item>
</section>
</profile>
