

================================================================
== Vitis HLS Report for 'aes_encrypt_block_Pipeline_loop_aes_encrypt_block'
================================================================
* Date:           Tue Dec  6 11:20:29 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        pynqrypt-vitis-hls
* Solution:       pynqrypt (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020i-clg400-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.764 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      182|      182|  1.820 us|  1.820 us|  182|  182|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |         Loop Name        |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_aes_encrypt_block  |      180|      180|        20|         20|          1|     9|       yes|
        +--------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 20, depth = 20


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 1
  Pipeline-0 : II = 20, D = 20, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.32>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 23 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln0 = store i4 1, i4 %i"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 25 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%round_key_index = load i4 %i" [hw-impl/src/pynqrypt.cpp:54]   --->   Operation 26 'load' 'round_key_index' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%state_addr = getelementptr i8 %state, i64 0, i64 15" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 27 'getelementptr' 'state_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%state_addr_1 = getelementptr i8 %state, i64 0, i64 14" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 28 'getelementptr' 'state_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%state_addr_2 = getelementptr i8 %state, i64 0, i64 13" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 29 'getelementptr' 'state_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%state_addr_3 = getelementptr i8 %state, i64 0, i64 12" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 30 'getelementptr' 'state_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%state_addr_4 = getelementptr i8 %state, i64 0, i64 11" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 31 'getelementptr' 'state_addr_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%state_addr_5 = getelementptr i8 %state, i64 0, i64 10" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 32 'getelementptr' 'state_addr_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%state_addr_6 = getelementptr i8 %state, i64 0, i64 9" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 33 'getelementptr' 'state_addr_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%state_addr_7 = getelementptr i8 %state, i64 0, i64 8" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 34 'getelementptr' 'state_addr_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%state_addr_8 = getelementptr i8 %state, i64 0, i64 7" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 35 'getelementptr' 'state_addr_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%state_addr_9 = getelementptr i8 %state, i64 0, i64 6" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 36 'getelementptr' 'state_addr_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%state_addr_10 = getelementptr i8 %state, i64 0, i64 5" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 37 'getelementptr' 'state_addr_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%state_addr_11 = getelementptr i8 %state, i64 0, i64 4" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 38 'getelementptr' 'state_addr_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%state_addr_12 = getelementptr i8 %state, i64 0, i64 3" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 39 'getelementptr' 'state_addr_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%state_addr_13 = getelementptr i8 %state, i64 0, i64 2" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 40 'getelementptr' 'state_addr_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%state_addr_14 = getelementptr i8 %state, i64 0, i64 1" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 41 'getelementptr' 'state_addr_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%state_addr_15 = getelementptr i8 %state, i64 0, i64 0" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 42 'getelementptr' 'state_addr_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 43 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.30ns)   --->   "%icmp_ln54 = icmp_eq  i4 %round_key_index, i4 10" [hw-impl/src/pynqrypt.cpp:54]   --->   Operation 44 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 1.30> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9"   --->   Operation 45 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln54 = br i1 %icmp_ln54, void %for.inc.split, void %for.inc.i34.preheader.exitStub" [hw-impl/src/pynqrypt.cpp:54]   --->   Operation 46 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [2/2] (2.32ns)   --->   "%state_load_1 = load i4 %state_addr_14" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 47 'load' 'state_load_1' <Predicate = (!icmp_ln54)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 48 [2/2] (2.32ns)   --->   "%state_load_12 = load i4 %state_addr_3" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 48 'load' 'state_load_12' <Predicate = (!icmp_ln54)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i4.i4, i4 %round_key_index, i4 0" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 49 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln222 = zext i8 %shl_ln1" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 50 'zext' 'zext_ln222' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 51 'getelementptr' 'pynqrypt_round_keys_addr' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 52 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load = load i8 %pynqrypt_round_keys_addr" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 52 'load' 'pynqrypt_round_keys_load' <Predicate = (!icmp_ln54)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%or_ln222_13 = or i8 %shl_ln1, i8 14" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 53 'or' 'or_ln222_13' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln222_14 = zext i8 %or_ln222_13" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 54 'zext' 'zext_ln222_14' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_45 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_14" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 55 'getelementptr' 'pynqrypt_round_keys_addr_45' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_1 : Operation 56 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_29 = load i8 %pynqrypt_round_keys_addr_45" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 56 'load' 'pynqrypt_round_keys_load_29' <Predicate = (!icmp_ln54)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_1 : Operation 57 [1/1] (1.73ns)   --->   "%add_ln54 = add i4 %round_key_index, i4 1" [hw-impl/src/pynqrypt.cpp:54]   --->   Operation 57 'add' 'add_ln54' <Predicate = (!icmp_ln54)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (1.58ns)   --->   "%store_ln54 = store i4 %add_ln54, i4 %i" [hw-impl/src/pynqrypt.cpp:54]   --->   Operation 58 'store' 'store_ln54' <Predicate = (!icmp_ln54)> <Delay = 1.58>
ST_1 : Operation 375 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 375 'ret' 'ret_ln0' <Predicate = (icmp_ln54)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.57>
ST_2 : Operation 59 [1/2] (2.32ns)   --->   "%state_load_1 = load i4 %state_addr_14" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 59 'load' 'state_load_1' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 60 [2/2] (2.32ns)   --->   "%state_load_6 = load i4 %state_addr_9" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 60 'load' 'state_load_6' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 61 [2/2] (2.32ns)   --->   "%state_load_11 = load i4 %state_addr_4" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 61 'load' 'state_load_11' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 62 [1/2] (2.32ns)   --->   "%state_load_12 = load i4 %state_addr_3" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 62 'load' 'state_load_12' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln69_12 = zext i8 %state_load_12" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 63 'zext' 'zext_ln69_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_12 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_12" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 64 'getelementptr' 'crypto_aes_sbox_addr_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_12 = load i8 %crypto_aes_sbox_addr_12" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 65 'load' 'crypto_aes_sbox_load_12' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_2 : Operation 66 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load = load i8 %pynqrypt_round_keys_addr" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 66 'load' 'pynqrypt_round_keys_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%or_ln222 = or i8 %shl_ln1, i8 1" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 67 'or' 'or_ln222' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln222_1 = zext i8 %or_ln222" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 68 'zext' 'zext_ln222_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_32 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_1" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 69 'getelementptr' 'pynqrypt_round_keys_addr_32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_16 = load i8 %pynqrypt_round_keys_addr_32" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 70 'load' 'pynqrypt_round_keys_load_16' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%or_ln222_1 = or i8 %shl_ln1, i8 2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 71 'or' 'or_ln222_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln222_2 = zext i8 %or_ln222_1" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 72 'zext' 'zext_ln222_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_33 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 73 'getelementptr' 'pynqrypt_round_keys_addr_33' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 74 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_17 = load i8 %pynqrypt_round_keys_addr_33" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 74 'load' 'pynqrypt_round_keys_load_17' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_2 : Operation 75 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_29 = load i8 %pynqrypt_round_keys_addr_45" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 75 'load' 'pynqrypt_round_keys_load_29' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>

State 3 <SV = 2> <Delay = 3.25>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln69_1 = zext i8 %state_load_1" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 76 'zext' 'zext_ln69_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_1 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_1" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 77 'getelementptr' 'crypto_aes_sbox_addr_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_1 = load i8 %crypto_aes_sbox_addr_1" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 78 'load' 'crypto_aes_sbox_load_1' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_3 : Operation 79 [2/2] (2.32ns)   --->   "%state_load_2 = load i4 %state_addr_13" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 79 'load' 'state_load_2' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 80 [1/2] (2.32ns)   --->   "%state_load_6 = load i4 %state_addr_9" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 80 'load' 'state_load_6' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 81 [1/2] (2.32ns)   --->   "%state_load_11 = load i4 %state_addr_4" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 81 'load' 'state_load_11' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 82 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_12 = load i8 %crypto_aes_sbox_addr_12" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 82 'load' 'crypto_aes_sbox_load_12' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_3 : Operation 83 [2/2] (2.32ns)   --->   "%state_load_13 = load i4 %state_addr_2" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 83 'load' 'state_load_13' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_3 : Operation 84 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_16 = load i8 %pynqrypt_round_keys_addr_32" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 84 'load' 'pynqrypt_round_keys_load_16' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_3 : Operation 85 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_17 = load i8 %pynqrypt_round_keys_addr_33" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 85 'load' 'pynqrypt_round_keys_load_17' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%or_ln222_2 = or i8 %shl_ln1, i8 3" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 86 'or' 'or_ln222_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln222_3 = zext i8 %or_ln222_2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 87 'zext' 'zext_ln222_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_34 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_3" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 88 'getelementptr' 'pynqrypt_round_keys_addr_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_18 = load i8 %pynqrypt_round_keys_addr_34" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 89 'load' 'pynqrypt_round_keys_load_18' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%or_ln222_3 = or i8 %shl_ln1, i8 4" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 90 'or' 'or_ln222_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln222_4 = zext i8 %or_ln222_3" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 91 'zext' 'zext_ln222_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_35 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_4" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 92 'getelementptr' 'pynqrypt_round_keys_addr_35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_19 = load i8 %pynqrypt_round_keys_addr_35" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 93 'load' 'pynqrypt_round_keys_load_19' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 94 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_1 = load i8 %crypto_aes_sbox_addr_1" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 94 'load' 'crypto_aes_sbox_load_1' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_4 : Operation 95 [1/2] (2.32ns)   --->   "%state_load_2 = load i4 %state_addr_13" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 95 'load' 'state_load_2' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 96 [2/2] (2.32ns)   --->   "%state_load_7 = load i4 %state_addr_8" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 96 'load' 'state_load_7' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 97 [2/2] (2.32ns)   --->   "%state_load_8 = load i4 %state_addr_7" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 97 'load' 'state_load_8' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln69_11 = zext i8 %state_load_11" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 98 'zext' 'zext_ln69_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_11 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_11" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 99 'getelementptr' 'crypto_aes_sbox_addr_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_11 = load i8 %crypto_aes_sbox_addr_11" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 100 'load' 'crypto_aes_sbox_load_11' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_4 : Operation 101 [1/2] (2.32ns)   --->   "%state_load_13 = load i4 %state_addr_2" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 101 'load' 'state_load_13' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_4 : Operation 102 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_18 = load i8 %pynqrypt_round_keys_addr_34" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 102 'load' 'pynqrypt_round_keys_load_18' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_4 : Operation 103 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_19 = load i8 %pynqrypt_round_keys_addr_35" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 103 'load' 'pynqrypt_round_keys_load_19' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%or_ln222_4 = or i8 %shl_ln1, i8 5" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 104 'or' 'or_ln222_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln222_5 = zext i8 %or_ln222_4" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 105 'zext' 'zext_ln222_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_36 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_5" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 106 'getelementptr' 'pynqrypt_round_keys_addr_36' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 107 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_20 = load i8 %pynqrypt_round_keys_addr_36" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 107 'load' 'pynqrypt_round_keys_load_20' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%or_ln222_5 = or i8 %shl_ln1, i8 6" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 108 'or' 'or_ln222_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln222_6 = zext i8 %or_ln222_5" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 109 'zext' 'zext_ln222_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_37 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_6" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 110 'getelementptr' 'pynqrypt_round_keys_addr_37' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 111 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_21 = load i8 %pynqrypt_round_keys_addr_37" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 111 'load' 'pynqrypt_round_keys_load_21' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>

State 5 <SV = 4> <Delay = 3.25>
ST_5 : Operation 112 [2/2] (2.32ns)   --->   "%state_load_3 = load i4 %state_addr_12" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 112 'load' 'state_load_3' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln69_6 = zext i8 %state_load_6" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 113 'zext' 'zext_ln69_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_6 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_6" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 114 'getelementptr' 'crypto_aes_sbox_addr_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 115 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_6 = load i8 %crypto_aes_sbox_addr_6" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 115 'load' 'crypto_aes_sbox_load_6' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_5 : Operation 116 [1/2] (2.32ns)   --->   "%state_load_7 = load i4 %state_addr_8" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 116 'load' 'state_load_7' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 117 [1/2] (2.32ns)   --->   "%state_load_8 = load i4 %state_addr_7" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 117 'load' 'state_load_8' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 118 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_11 = load i8 %crypto_aes_sbox_addr_11" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 118 'load' 'crypto_aes_sbox_load_11' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_5 : Operation 119 [2/2] (2.32ns)   --->   "%state_load_14 = load i4 %state_addr_1" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 119 'load' 'state_load_14' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_5 : Operation 120 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_20 = load i8 %pynqrypt_round_keys_addr_36" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 120 'load' 'pynqrypt_round_keys_load_20' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_5 : Operation 121 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_21 = load i8 %pynqrypt_round_keys_addr_37" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 121 'load' 'pynqrypt_round_keys_load_21' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_5 : Operation 122 [1/1] (0.00ns)   --->   "%or_ln222_6 = or i8 %shl_ln1, i8 7" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 122 'or' 'or_ln222_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln222_7 = zext i8 %or_ln222_6" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 123 'zext' 'zext_ln222_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_38 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_7" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 124 'getelementptr' 'pynqrypt_round_keys_addr_38' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 125 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_22 = load i8 %pynqrypt_round_keys_addr_38" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 125 'load' 'pynqrypt_round_keys_load_22' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%or_ln222_7 = or i8 %shl_ln1, i8 8" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 126 'or' 'or_ln222_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln222_8 = zext i8 %or_ln222_7" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 127 'zext' 'zext_ln222_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_39 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_8" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 128 'getelementptr' 'pynqrypt_round_keys_addr_39' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 129 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_23 = load i8 %pynqrypt_round_keys_addr_39" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 129 'load' 'pynqrypt_round_keys_load_23' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>

State 6 <SV = 5> <Delay = 3.25>
ST_6 : Operation 130 [1/2] (2.32ns)   --->   "%state_load_3 = load i4 %state_addr_12" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 130 'load' 'state_load_3' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 131 [2/2] (2.32ns)   --->   "%state_load_4 = load i4 %state_addr_11" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 131 'load' 'state_load_4' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 132 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_6 = load i8 %crypto_aes_sbox_addr_6" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 132 'load' 'crypto_aes_sbox_load_6' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_6 : Operation 133 [2/2] (2.32ns)   --->   "%state_load_9 = load i4 %state_addr_6" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 133 'load' 'state_load_9' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "%zext_ln69_13 = zext i8 %state_load_13" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 134 'zext' 'zext_ln69_13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 135 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_13 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_13" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 135 'getelementptr' 'crypto_aes_sbox_addr_13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 136 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_13 = load i8 %crypto_aes_sbox_addr_13" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 136 'load' 'crypto_aes_sbox_load_13' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_6 : Operation 137 [1/2] (2.32ns)   --->   "%state_load_14 = load i4 %state_addr_1" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 137 'load' 'state_load_14' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_6 : Operation 138 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_22 = load i8 %pynqrypt_round_keys_addr_38" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 138 'load' 'pynqrypt_round_keys_load_22' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_6 : Operation 139 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_23 = load i8 %pynqrypt_round_keys_addr_39" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 139 'load' 'pynqrypt_round_keys_load_23' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_6 : Operation 140 [1/1] (0.00ns)   --->   "%or_ln222_8 = or i8 %shl_ln1, i8 9" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 140 'or' 'or_ln222_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln222_9 = zext i8 %or_ln222_8" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 141 'zext' 'zext_ln222_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 142 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_40 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_9" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 142 'getelementptr' 'pynqrypt_round_keys_addr_40' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 143 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_24 = load i8 %pynqrypt_round_keys_addr_40" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 143 'load' 'pynqrypt_round_keys_load_24' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_6 : Operation 144 [1/1] (0.00ns)   --->   "%or_ln222_9 = or i8 %shl_ln1, i8 10" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 144 'or' 'or_ln222_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln222_10 = zext i8 %or_ln222_9" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 145 'zext' 'zext_ln222_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 146 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_41 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_10" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 146 'getelementptr' 'pynqrypt_round_keys_addr_41' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 147 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_25 = load i8 %pynqrypt_round_keys_addr_41" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 147 'load' 'pynqrypt_round_keys_load_25' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>

State 7 <SV = 6> <Delay = 4.50>
ST_7 : Operation 148 [2/2] (2.32ns)   --->   "%state_load = load i4 %state_addr_15" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 148 'load' 'state_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln69_2 = zext i8 %state_load_2" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 149 'zext' 'zext_ln69_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 150 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_2 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_2" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 150 'getelementptr' 'crypto_aes_sbox_addr_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 151 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_2 = load i8 %crypto_aes_sbox_addr_2" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 151 'load' 'crypto_aes_sbox_load_2' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_7 : Operation 152 [1/2] (2.32ns)   --->   "%state_load_4 = load i4 %state_addr_11" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 152 'load' 'state_load_4' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 153 [1/2] (2.32ns)   --->   "%state_load_9 = load i4 %state_addr_6" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 153 'load' 'state_load_9' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_7 : Operation 154 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_13 = load i8 %crypto_aes_sbox_addr_13" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 154 'load' 'crypto_aes_sbox_load_13' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_7 : Operation 155 [1/1] (0.99ns)   --->   "%xor_ln101_9 = xor i8 %crypto_aes_sbox_load_1, i8 %crypto_aes_sbox_load_12" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 155 'xor' 'xor_ln101_9' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 156 [1/1] (0.99ns)   --->   "%xor_ln110_3 = xor i8 %crypto_aes_sbox_load_11, i8 %crypto_aes_sbox_load_6" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 156 'xor' 'xor_ln110_3' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_16)   --->   "%shl_ln228_14 = shl i8 %xor_ln110_3, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 157 'shl' 'shl_ln228_14' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_16)   --->   "%tmp_14 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln110_3, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 158 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_16)   --->   "%select_ln114_3 = select i1 %tmp_14, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 159 'select' 'select_ln114_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 160 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_24 = load i8 %pynqrypt_round_keys_addr_40" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 160 'load' 'pynqrypt_round_keys_load_24' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_7 : Operation 161 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_25 = load i8 %pynqrypt_round_keys_addr_41" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 161 'load' 'pynqrypt_round_keys_load_25' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_7 : Operation 162 [1/1] (0.00ns)   --->   "%or_ln222_10 = or i8 %shl_ln1, i8 11" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 162 'or' 'or_ln222_10' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln222_11 = zext i8 %or_ln222_10" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 163 'zext' 'zext_ln222_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 164 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_42 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_11" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 164 'getelementptr' 'pynqrypt_round_keys_addr_42' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 165 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_26 = load i8 %pynqrypt_round_keys_addr_42" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 165 'load' 'pynqrypt_round_keys_load_26' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_7 : Operation 166 [1/1] (0.00ns)   --->   "%or_ln222_11 = or i8 %shl_ln1, i8 12" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 166 'or' 'or_ln222_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 167 [1/1] (0.00ns)   --->   "%zext_ln222_12 = zext i8 %or_ln222_11" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 167 'zext' 'zext_ln222_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 168 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_43 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_12" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 168 'getelementptr' 'pynqrypt_round_keys_addr_43' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 169 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_27 = load i8 %pynqrypt_round_keys_addr_43" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 169 'load' 'pynqrypt_round_keys_load_27' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_7 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_16)   --->   "%xor_ln222_55 = xor i8 %crypto_aes_sbox_load_11, i8 %pynqrypt_round_keys_load_29" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 170 'xor' 'xor_ln222_55' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_16)   --->   "%xor_ln222_56 = xor i8 %select_ln114_3, i8 %shl_ln228_14" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 171 'xor' 'xor_ln222_56' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_16)   --->   "%xor_ln222_57 = xor i8 %xor_ln222_55, i8 %xor_ln101_9" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 172 'xor' 'xor_ln222_57' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 173 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_16 = xor i8 %xor_ln222_57, i8 %xor_ln222_56" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 173 'xor' 'xor_ln222_16' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 174 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_16, i4 %state_addr_1" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 174 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 8 <SV = 7> <Delay = 3.25>
ST_8 : Operation 175 [1/2] (2.32ns)   --->   "%state_load = load i4 %state_addr_15" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 175 'load' 'state_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 176 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_2 = load i8 %crypto_aes_sbox_addr_2" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 176 'load' 'crypto_aes_sbox_load_2' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_8 : Operation 177 [2/2] (2.32ns)   --->   "%state_load_5 = load i4 %state_addr_10" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 177 'load' 'state_load_5' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln69_8 = zext i8 %state_load_8" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 178 'zext' 'zext_ln69_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 179 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_8 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_8" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 179 'getelementptr' 'crypto_aes_sbox_addr_8' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 180 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_8 = load i8 %crypto_aes_sbox_addr_8" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 180 'load' 'crypto_aes_sbox_load_8' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_8 : Operation 181 [2/2] (2.32ns)   --->   "%state_load_10 = load i4 %state_addr_5" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 181 'load' 'state_load_10' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_8 : Operation 182 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_26 = load i8 %pynqrypt_round_keys_addr_42" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 182 'load' 'pynqrypt_round_keys_load_26' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_8 : Operation 183 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_27 = load i8 %pynqrypt_round_keys_addr_43" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 183 'load' 'pynqrypt_round_keys_load_27' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_8 : Operation 184 [1/1] (0.00ns)   --->   "%or_ln222_12 = or i8 %shl_ln1, i8 13" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 184 'or' 'or_ln222_12' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 185 [1/1] (0.00ns)   --->   "%zext_ln222_13 = zext i8 %or_ln222_12" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 185 'zext' 'zext_ln222_13' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 186 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_44 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_13" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 186 'getelementptr' 'pynqrypt_round_keys_addr_44' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 187 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_28 = load i8 %pynqrypt_round_keys_addr_44" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 187 'load' 'pynqrypt_round_keys_load_28' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_8 : Operation 188 [1/1] (0.00ns)   --->   "%or_ln222_14 = or i8 %shl_ln1, i8 15" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 188 'or' 'or_ln222_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln222_15 = zext i8 %or_ln222_14" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 189 'zext' 'zext_ln222_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 190 [1/1] (0.00ns)   --->   "%pynqrypt_round_keys_addr_46 = getelementptr i8 %pynqrypt_round_keys, i64 0, i64 %zext_ln222_15" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 190 'getelementptr' 'pynqrypt_round_keys_addr_46' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 191 [2/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_30 = load i8 %pynqrypt_round_keys_addr_46" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 191 'load' 'pynqrypt_round_keys_load_30' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>

State 9 <SV = 8> <Delay = 6.76>
ST_9 : Operation 192 [1/2] (2.32ns)   --->   "%state_load_5 = load i4 %state_addr_10" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 192 'load' 'state_load_5' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln69_7 = zext i8 %state_load_7" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 193 'zext' 'zext_ln69_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 194 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_7 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_7" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 194 'getelementptr' 'crypto_aes_sbox_addr_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 195 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_7 = load i8 %crypto_aes_sbox_addr_7" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 195 'load' 'crypto_aes_sbox_load_7' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_9 : Operation 196 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_8 = load i8 %crypto_aes_sbox_addr_8" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 196 'load' 'crypto_aes_sbox_load_8' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_9 : Operation 197 [1/2] (2.32ns)   --->   "%state_load_10 = load i4 %state_addr_5" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 197 'load' 'state_load_10' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 198 [2/2] (2.32ns)   --->   "%state_load_15 = load i4 %state_addr" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 198 'load' 'state_load_15' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 199 [1/1] (0.99ns)   --->   "%xor_ln101_10 = xor i8 %crypto_aes_sbox_load_6, i8 %xor_ln101_9" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 199 'xor' 'xor_ln101_10' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 200 [1/1] (0.99ns)   --->   "%xor_ln101_11 = xor i8 %crypto_aes_sbox_load_11, i8 %xor_ln101_10" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 200 'xor' 'xor_ln101_11' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_14)   --->   "%shl_ln228_12 = shl i8 %xor_ln101_9, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 201 'shl' 'shl_ln228_12' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_14)   --->   "%tmp_12 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln101_9, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 202 'bitselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 203 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_14)   --->   "%select_ln106_3 = select i1 %tmp_12, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 203 'select' 'select_ln106_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 204 [1/1] (0.99ns)   --->   "%xor_ln106_3 = xor i8 %crypto_aes_sbox_load_6, i8 %crypto_aes_sbox_load_1" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 204 'xor' 'xor_ln106_3' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 205 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_15)   --->   "%shl_ln228_13 = shl i8 %xor_ln106_3, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 205 'shl' 'shl_ln228_13' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_15)   --->   "%tmp_13 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln106_3, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 206 'bitselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_15)   --->   "%select_ln110_3 = select i1 %tmp_13, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 207 'select' 'select_ln110_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 208 [1/1] (0.99ns)   --->   "%xor_ln114_3 = xor i8 %crypto_aes_sbox_load_11, i8 %crypto_aes_sbox_load_12" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 208 'xor' 'xor_ln114_3' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_17)   --->   "%shl_ln228_15 = shl i8 %xor_ln114_3, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 209 'shl' 'shl_ln228_15' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_17)   --->   "%tmp_15 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln114_3, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 210 'bitselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_17)   --->   "%select_ln222 = select i1 %tmp_15, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 211 'select' 'select_ln222' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_14)   --->   "%xor_ln222_49 = xor i8 %crypto_aes_sbox_load_12, i8 %pynqrypt_round_keys_load_27" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 212 'xor' 'xor_ln222_49' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_14)   --->   "%xor_ln222_50 = xor i8 %select_ln106_3, i8 %xor_ln101_11" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 213 'xor' 'xor_ln222_50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_14)   --->   "%xor_ln222_51 = xor i8 %xor_ln222_49, i8 %shl_ln228_12" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 214 'xor' 'xor_ln222_51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 215 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_14 = xor i8 %xor_ln222_51, i8 %xor_ln222_50" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 215 'xor' 'xor_ln222_14' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 216 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_14, i4 %state_addr_3" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 216 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_9 : Operation 217 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_28 = load i8 %pynqrypt_round_keys_addr_44" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 217 'load' 'pynqrypt_round_keys_load_28' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_9 : Operation 218 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_15)   --->   "%xor_ln222_52 = xor i8 %crypto_aes_sbox_load_1, i8 %pynqrypt_round_keys_load_28" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 218 'xor' 'xor_ln222_52' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 219 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_15)   --->   "%xor_ln222_53 = xor i8 %select_ln110_3, i8 %xor_ln101_11" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 219 'xor' 'xor_ln222_53' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 220 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_15)   --->   "%xor_ln222_54 = xor i8 %xor_ln222_53, i8 %shl_ln228_13" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 220 'xor' 'xor_ln222_54' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 221 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_15 = xor i8 %xor_ln222_54, i8 %xor_ln222_52" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 221 'xor' 'xor_ln222_15' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 222 [1/2] (3.25ns)   --->   "%pynqrypt_round_keys_load_30 = load i8 %pynqrypt_round_keys_addr_46" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 222 'load' 'pynqrypt_round_keys_load_30' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 176> <RAM>
ST_9 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_17)   --->   "%xor_ln222_58 = xor i8 %pynqrypt_round_keys_load_30, i8 %shl_ln228_15" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 223 'xor' 'xor_ln222_58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_17)   --->   "%xor_ln222_59 = xor i8 %xor_ln101_10, i8 %select_ln222" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 224 'xor' 'xor_ln222_59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 225 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_17 = xor i8 %xor_ln222_59, i8 %xor_ln222_58" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 225 'xor' 'xor_ln222_17' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 226 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_17, i4 %state_addr" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 226 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 10 <SV = 9> <Delay = 5.43>
ST_10 : Operation 227 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_7 = load i8 %crypto_aes_sbox_addr_7" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 227 'load' 'crypto_aes_sbox_load_7' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_10 : Operation 228 [1/1] (0.00ns)   --->   "%zext_ln69_14 = zext i8 %state_load_14" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 228 'zext' 'zext_ln69_14' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 229 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_14 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_14" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 229 'getelementptr' 'crypto_aes_sbox_addr_14' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 230 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_14 = load i8 %crypto_aes_sbox_addr_14" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 230 'load' 'crypto_aes_sbox_load_14' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_10 : Operation 231 [1/2] (2.32ns)   --->   "%state_load_15 = load i4 %state_addr" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 231 'load' 'state_load_15' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_10 : Operation 232 [1/1] (0.99ns)   --->   "%xor_ln101_6 = xor i8 %crypto_aes_sbox_load_13, i8 %crypto_aes_sbox_load_8" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 232 'xor' 'xor_ln101_6' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 233 [1/1] (0.99ns)   --->   "%xor_ln101_7 = xor i8 %crypto_aes_sbox_load_2, i8 %xor_ln101_6" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 233 'xor' 'xor_ln101_7' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 234 [1/1] (0.99ns)   --->   "%xor_ln101_8 = xor i8 %crypto_aes_sbox_load_7, i8 %xor_ln101_7" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 234 'xor' 'xor_ln101_8' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_10)   --->   "%shl_ln228_8 = shl i8 %xor_ln101_6, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 235 'shl' 'shl_ln228_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_10)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln101_6, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 236 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_10)   --->   "%select_ln106_2 = select i1 %tmp_8, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 237 'select' 'select_ln106_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 238 [1/1] (0.99ns)   --->   "%xor_ln106_2 = xor i8 %crypto_aes_sbox_load_2, i8 %crypto_aes_sbox_load_13" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 238 'xor' 'xor_ln106_2' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_11)   --->   "%shl_ln228_9 = shl i8 %xor_ln106_2, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 239 'shl' 'shl_ln228_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_11)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln106_2, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 240 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_11)   --->   "%select_ln110_2 = select i1 %tmp_9, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 241 'select' 'select_ln110_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 242 [1/1] (0.99ns)   --->   "%xor_ln110_2 = xor i8 %crypto_aes_sbox_load_7, i8 %crypto_aes_sbox_load_2" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 242 'xor' 'xor_ln110_2' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_12)   --->   "%shl_ln228_10 = shl i8 %xor_ln110_2, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 243 'shl' 'shl_ln228_10' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_12)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln110_2, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 244 'bitselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_12)   --->   "%select_ln114_2 = select i1 %tmp_10, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 245 'select' 'select_ln114_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 246 [1/1] (0.99ns)   --->   "%xor_ln114_2 = xor i8 %crypto_aes_sbox_load_7, i8 %crypto_aes_sbox_load_8" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 246 'xor' 'xor_ln114_2' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_13)   --->   "%shl_ln228_11 = shl i8 %xor_ln114_2, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 247 'shl' 'shl_ln228_11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_13)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln114_2, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 248 'bitselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_13)   --->   "%select_ln101_2 = select i1 %tmp_11, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 249 'select' 'select_ln101_2' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_10)   --->   "%xor_ln222_38 = xor i8 %crypto_aes_sbox_load_8, i8 %pynqrypt_round_keys_load_23" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 250 'xor' 'xor_ln222_38' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_10)   --->   "%xor_ln222_39 = xor i8 %select_ln106_2, i8 %xor_ln101_8" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 251 'xor' 'xor_ln222_39' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_10)   --->   "%xor_ln222_40 = xor i8 %xor_ln222_39, i8 %shl_ln228_8" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 252 'xor' 'xor_ln222_40' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 253 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_10 = xor i8 %xor_ln222_40, i8 %xor_ln222_38" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 253 'xor' 'xor_ln222_10' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 254 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_11)   --->   "%xor_ln222_41 = xor i8 %crypto_aes_sbox_load_13, i8 %pynqrypt_round_keys_load_24" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 254 'xor' 'xor_ln222_41' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_11)   --->   "%xor_ln222_42 = xor i8 %select_ln110_2, i8 %xor_ln101_8" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 255 'xor' 'xor_ln222_42' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_11)   --->   "%xor_ln222_43 = xor i8 %xor_ln222_41, i8 %shl_ln228_9" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 256 'xor' 'xor_ln222_43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 257 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_11 = xor i8 %xor_ln222_43, i8 %xor_ln222_42" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 257 'xor' 'xor_ln222_11' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 258 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_12)   --->   "%xor_ln222_44 = xor i8 %crypto_aes_sbox_load_7, i8 %pynqrypt_round_keys_load_25" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 258 'xor' 'xor_ln222_44' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 259 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_12)   --->   "%xor_ln222_45 = xor i8 %xor_ln101_6, i8 %shl_ln228_10" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 259 'xor' 'xor_ln222_45' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 260 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_12)   --->   "%xor_ln222_46 = xor i8 %xor_ln222_45, i8 %select_ln114_2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 260 'xor' 'xor_ln222_46' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 261 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_12 = xor i8 %xor_ln222_46, i8 %xor_ln222_44" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 261 'xor' 'xor_ln222_12' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 262 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_13)   --->   "%xor_ln222_47 = xor i8 %pynqrypt_round_keys_load_26, i8 %shl_ln228_11" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 262 'xor' 'xor_ln222_47' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 263 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_13)   --->   "%xor_ln222_48 = xor i8 %xor_ln101_7, i8 %select_ln101_2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 263 'xor' 'xor_ln222_48' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 264 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_13 = xor i8 %xor_ln222_48, i8 %xor_ln222_47" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 264 'xor' 'xor_ln222_13' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 265 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_15, i4 %state_addr_2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 265 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 266 [1/1] (0.00ns)   --->   "%zext_ln69_3 = zext i8 %state_load_3" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 266 'zext' 'zext_ln69_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 267 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_3 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_3" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 267 'getelementptr' 'crypto_aes_sbox_addr_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 268 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_3 = load i8 %crypto_aes_sbox_addr_3" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 268 'load' 'crypto_aes_sbox_load_3' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_11 : Operation 269 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_14 = load i8 %crypto_aes_sbox_addr_14" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 269 'load' 'crypto_aes_sbox_load_14' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_11 : Operation 270 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_10, i4 %state_addr_7" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 270 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_11 : Operation 271 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_12, i4 %state_addr_5" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 271 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 12 <SV = 11> <Delay = 3.25>
ST_12 : Operation 272 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_3 = load i8 %crypto_aes_sbox_addr_3" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 272 'load' 'crypto_aes_sbox_load_3' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_12 : Operation 273 [1/1] (0.00ns)   --->   "%zext_ln69_9 = zext i8 %state_load_9" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 273 'zext' 'zext_ln69_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 274 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_9 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_9" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 274 'getelementptr' 'crypto_aes_sbox_addr_9' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 275 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_9 = load i8 %crypto_aes_sbox_addr_9" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 275 'load' 'crypto_aes_sbox_load_9' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_12 : Operation 276 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_11, i4 %state_addr_6" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 276 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_12 : Operation 277 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_13, i4 %state_addr_4" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 277 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 13 <SV = 12> <Delay = 3.25>
ST_13 : Operation 278 [1/1] (0.00ns)   --->   "%zext_ln69_4 = zext i8 %state_load_4" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 278 'zext' 'zext_ln69_4' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 279 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_4 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_4" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 279 'getelementptr' 'crypto_aes_sbox_addr_4' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 280 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_4 = load i8 %crypto_aes_sbox_addr_4" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 280 'load' 'crypto_aes_sbox_load_4' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_13 : Operation 281 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_9 = load i8 %crypto_aes_sbox_addr_9" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 281 'load' 'crypto_aes_sbox_load_9' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 14 <SV = 13> <Delay = 3.25>
ST_14 : Operation 282 [1/1] (0.00ns)   --->   "%zext_ln69 = zext i8 %state_load" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 282 'zext' 'zext_ln69' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 283 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 283 'getelementptr' 'crypto_aes_sbox_addr' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 284 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load = load i8 %crypto_aes_sbox_addr" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 284 'load' 'crypto_aes_sbox_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_14 : Operation 285 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_4 = load i8 %crypto_aes_sbox_addr_4" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 285 'load' 'crypto_aes_sbox_load_4' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 15 <SV = 14> <Delay = 6.48>
ST_15 : Operation 286 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load = load i8 %crypto_aes_sbox_addr" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 286 'load' 'crypto_aes_sbox_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_15 : Operation 287 [1/1] (0.00ns)   --->   "%zext_ln69_5 = zext i8 %state_load_5" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 287 'zext' 'zext_ln69_5' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 288 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_5 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_5" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 288 'getelementptr' 'crypto_aes_sbox_addr_5' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 289 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_5 = load i8 %crypto_aes_sbox_addr_5" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 289 'load' 'crypto_aes_sbox_load_5' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_15 : Operation 290 [1/1] (0.99ns)   --->   "%xor_ln101_3 = xor i8 %crypto_aes_sbox_load_9, i8 %crypto_aes_sbox_load_4" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 290 'xor' 'xor_ln101_3' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 291 [1/1] (0.99ns)   --->   "%xor_ln101_4 = xor i8 %crypto_aes_sbox_load_14, i8 %xor_ln101_3" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 291 'xor' 'xor_ln101_4' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 292 [1/1] (0.99ns)   --->   "%xor_ln101_5 = xor i8 %crypto_aes_sbox_load_3, i8 %xor_ln101_4" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 292 'xor' 'xor_ln101_5' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 293 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_6)   --->   "%shl_ln228_4 = shl i8 %xor_ln101_3, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 293 'shl' 'shl_ln228_4' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 294 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_6)   --->   "%tmp_4 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln101_3, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 294 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 295 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_6)   --->   "%select_ln106_1 = select i1 %tmp_4, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 295 'select' 'select_ln106_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 296 [1/1] (0.99ns)   --->   "%xor_ln106_1 = xor i8 %crypto_aes_sbox_load_14, i8 %crypto_aes_sbox_load_9" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 296 'xor' 'xor_ln106_1' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 297 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_7)   --->   "%shl_ln228_5 = shl i8 %xor_ln106_1, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 297 'shl' 'shl_ln228_5' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_7)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln106_1, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 298 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 299 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_7)   --->   "%select_ln110_1 = select i1 %tmp_5, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 299 'select' 'select_ln110_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 300 [1/1] (0.99ns)   --->   "%xor_ln110_1 = xor i8 %crypto_aes_sbox_load_3, i8 %crypto_aes_sbox_load_14" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 300 'xor' 'xor_ln110_1' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 301 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_8)   --->   "%shl_ln228_6 = shl i8 %xor_ln110_1, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 301 'shl' 'shl_ln228_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 302 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_8)   --->   "%tmp_6 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln110_1, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 302 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 303 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_8)   --->   "%select_ln114_1 = select i1 %tmp_6, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 303 'select' 'select_ln114_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 304 [1/1] (0.99ns)   --->   "%xor_ln114_1 = xor i8 %crypto_aes_sbox_load_3, i8 %crypto_aes_sbox_load_4" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 304 'xor' 'xor_ln114_1' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 305 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_9)   --->   "%shl_ln228_7 = shl i8 %xor_ln114_1, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 305 'shl' 'shl_ln228_7' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 306 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_9)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln114_1, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 306 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 307 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_9)   --->   "%select_ln101_1 = select i1 %tmp_7, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 307 'select' 'select_ln101_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 308 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_6)   --->   "%xor_ln222_27 = xor i8 %crypto_aes_sbox_load_4, i8 %pynqrypt_round_keys_load_19" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 308 'xor' 'xor_ln222_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_6)   --->   "%xor_ln222_28 = xor i8 %select_ln106_1, i8 %xor_ln101_5" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 309 'xor' 'xor_ln222_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 310 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_6)   --->   "%xor_ln222_29 = xor i8 %xor_ln222_28, i8 %shl_ln228_4" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 310 'xor' 'xor_ln222_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 311 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_6 = xor i8 %xor_ln222_29, i8 %xor_ln222_27" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 311 'xor' 'xor_ln222_6' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 312 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_6, i4 %state_addr_11" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 312 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_15 : Operation 313 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_7)   --->   "%xor_ln222_30 = xor i8 %crypto_aes_sbox_load_9, i8 %pynqrypt_round_keys_load_20" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 313 'xor' 'xor_ln222_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 314 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_7)   --->   "%xor_ln222_31 = xor i8 %select_ln110_1, i8 %xor_ln101_5" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 314 'xor' 'xor_ln222_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 315 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_7)   --->   "%xor_ln222_32 = xor i8 %xor_ln222_31, i8 %shl_ln228_5" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 315 'xor' 'xor_ln222_32' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 316 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_7 = xor i8 %xor_ln222_32, i8 %xor_ln222_30" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 316 'xor' 'xor_ln222_7' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 317 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_8)   --->   "%xor_ln222_33 = xor i8 %crypto_aes_sbox_load_3, i8 %pynqrypt_round_keys_load_21" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 317 'xor' 'xor_ln222_33' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 318 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_8)   --->   "%xor_ln222_34 = xor i8 %select_ln114_1, i8 %shl_ln228_6" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 318 'xor' 'xor_ln222_34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 319 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_8)   --->   "%xor_ln222_35 = xor i8 %xor_ln222_34, i8 %xor_ln101_3" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 319 'xor' 'xor_ln222_35' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 320 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_8 = xor i8 %xor_ln222_35, i8 %xor_ln222_33" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 320 'xor' 'xor_ln222_8' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 321 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_8, i4 %state_addr_9" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 321 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_15 : Operation 322 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_9)   --->   "%xor_ln222_36 = xor i8 %pynqrypt_round_keys_load_22, i8 %shl_ln228_7" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 322 'xor' 'xor_ln222_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 323 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_9)   --->   "%xor_ln222_37 = xor i8 %xor_ln101_4, i8 %select_ln101_1" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 323 'xor' 'xor_ln222_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 324 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_9 = xor i8 %xor_ln222_37, i8 %xor_ln222_36" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 324 'xor' 'xor_ln222_9' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.25>
ST_16 : Operation 325 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_5 = load i8 %crypto_aes_sbox_addr_5" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 325 'load' 'crypto_aes_sbox_load_5' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_16 : Operation 326 [1/1] (0.00ns)   --->   "%zext_ln69_10 = zext i8 %state_load_10" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 326 'zext' 'zext_ln69_10' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 327 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_10 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_10" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 327 'getelementptr' 'crypto_aes_sbox_addr_10' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 328 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_10 = load i8 %crypto_aes_sbox_addr_10" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 328 'load' 'crypto_aes_sbox_load_10' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_16 : Operation 329 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_7, i4 %state_addr_10" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 329 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_16 : Operation 330 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_9, i4 %state_addr_8" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 330 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 17 <SV = 16> <Delay = 3.25>
ST_17 : Operation 331 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_10 = load i8 %crypto_aes_sbox_addr_10" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 331 'load' 'crypto_aes_sbox_load_10' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_17 : Operation 332 [1/1] (0.00ns)   --->   "%zext_ln69_15 = zext i8 %state_load_15" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 332 'zext' 'zext_ln69_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 333 [1/1] (0.00ns)   --->   "%crypto_aes_sbox_addr_15 = getelementptr i8 %crypto_aes_sbox, i64 0, i64 %zext_ln69_15" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 333 'getelementptr' 'crypto_aes_sbox_addr_15' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 334 [2/2] (3.25ns)   --->   "%crypto_aes_sbox_load_15 = load i8 %crypto_aes_sbox_addr_15" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 334 'load' 'crypto_aes_sbox_load_15' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>

State 18 <SV = 17> <Delay = 5.43>
ST_18 : Operation 335 [1/2] (3.25ns)   --->   "%crypto_aes_sbox_load_15 = load i8 %crypto_aes_sbox_addr_15" [hw-impl/src/pynqrypt.cpp:69]   --->   Operation 335 'load' 'crypto_aes_sbox_load_15' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 95 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 8> <Depth = 256> <ROM>
ST_18 : Operation 336 [1/1] (0.99ns)   --->   "%xor_ln101 = xor i8 %crypto_aes_sbox_load_5, i8 %crypto_aes_sbox_load" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 336 'xor' 'xor_ln101' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 337 [1/1] (0.99ns)   --->   "%xor_ln101_1 = xor i8 %crypto_aes_sbox_load_10, i8 %xor_ln101" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 337 'xor' 'xor_ln101_1' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 338 [1/1] (0.99ns)   --->   "%xor_ln101_2 = xor i8 %crypto_aes_sbox_load_15, i8 %xor_ln101_1" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 338 'xor' 'xor_ln101_2' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 339 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_2)   --->   "%shl_ln228 = shl i8 %xor_ln101, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 339 'shl' 'shl_ln228' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_2)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln101, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 340 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 341 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_2)   --->   "%select_ln106 = select i1 %tmp, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 341 'select' 'select_ln106' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 342 [1/1] (0.99ns)   --->   "%xor_ln106 = xor i8 %crypto_aes_sbox_load_10, i8 %crypto_aes_sbox_load_5" [hw-impl/src/pynqrypt.cpp:106]   --->   Operation 342 'xor' 'xor_ln106' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_3)   --->   "%shl_ln228_1 = shl i8 %xor_ln106, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 343 'shl' 'shl_ln228_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_3)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln106, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 344 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_3)   --->   "%select_ln110 = select i1 %tmp_1, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 345 'select' 'select_ln110' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 346 [1/1] (0.99ns)   --->   "%xor_ln110 = xor i8 %crypto_aes_sbox_load_15, i8 %crypto_aes_sbox_load_10" [hw-impl/src/pynqrypt.cpp:110]   --->   Operation 346 'xor' 'xor_ln110' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_4)   --->   "%shl_ln228_2 = shl i8 %xor_ln110, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 347 'shl' 'shl_ln228_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 348 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_4)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln110, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 348 'bitselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 349 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_4)   --->   "%select_ln114 = select i1 %tmp_2, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 349 'select' 'select_ln114' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 350 [1/1] (0.99ns)   --->   "%xor_ln114 = xor i8 %crypto_aes_sbox_load_15, i8 %crypto_aes_sbox_load" [hw-impl/src/pynqrypt.cpp:114]   --->   Operation 350 'xor' 'xor_ln114' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 351 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_5)   --->   "%shl_ln228_3 = shl i8 %xor_ln114, i8 1" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 351 'shl' 'shl_ln228_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 352 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_5)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i8.i32, i8 %xor_ln114, i32 7" [hw-impl/src/pynqrypt.cpp:228]   --->   Operation 352 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 353 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_5)   --->   "%select_ln101 = select i1 %tmp_3, i8 27, i8 0" [hw-impl/src/pynqrypt.cpp:101]   --->   Operation 353 'select' 'select_ln101' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 354 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_2)   --->   "%xor_ln222 = xor i8 %crypto_aes_sbox_load, i8 %pynqrypt_round_keys_load" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 354 'xor' 'xor_ln222' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_2)   --->   "%xor_ln222_1 = xor i8 %select_ln106, i8 %xor_ln101_2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 355 'xor' 'xor_ln222_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_2)   --->   "%xor_ln222_18 = xor i8 %xor_ln222_1, i8 %shl_ln228" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 356 'xor' 'xor_ln222_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 357 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_2 = xor i8 %xor_ln222_18, i8 %xor_ln222" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 357 'xor' 'xor_ln222_2' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_3)   --->   "%xor_ln222_19 = xor i8 %crypto_aes_sbox_load_5, i8 %pynqrypt_round_keys_load_16" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 358 'xor' 'xor_ln222_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_3)   --->   "%xor_ln222_20 = xor i8 %select_ln110, i8 %xor_ln101_2" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 359 'xor' 'xor_ln222_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_3)   --->   "%xor_ln222_21 = xor i8 %xor_ln222_20, i8 %shl_ln228_1" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 360 'xor' 'xor_ln222_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 361 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_3 = xor i8 %xor_ln222_21, i8 %xor_ln222_19" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 361 'xor' 'xor_ln222_3' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_4)   --->   "%xor_ln222_22 = xor i8 %crypto_aes_sbox_load_15, i8 %pynqrypt_round_keys_load_17" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 362 'xor' 'xor_ln222_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 363 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_4)   --->   "%xor_ln222_23 = xor i8 %shl_ln228_2, i8 %select_ln114" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 363 'xor' 'xor_ln222_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_4)   --->   "%xor_ln222_24 = xor i8 %xor_ln222_23, i8 %xor_ln101" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 364 'xor' 'xor_ln222_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 365 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_4 = xor i8 %xor_ln222_24, i8 %xor_ln222_22" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 365 'xor' 'xor_ln222_4' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_5)   --->   "%xor_ln222_25 = xor i8 %pynqrypt_round_keys_load_18, i8 %shl_ln228_3" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 366 'xor' 'xor_ln222_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 367 [1/1] (0.00ns) (grouped into LUT with out node xor_ln222_5)   --->   "%xor_ln222_26 = xor i8 %xor_ln101_1, i8 %select_ln101" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 367 'xor' 'xor_ln222_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 368 [1/1] (1.18ns) (out node of the LUT)   --->   "%xor_ln222_5 = xor i8 %xor_ln222_26, i8 %xor_ln222_25" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 368 'xor' 'xor_ln222_5' <Predicate = true> <Delay = 1.18> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 2.32>
ST_19 : Operation 369 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_2, i4 %state_addr_15" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 369 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_19 : Operation 370 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_3, i4 %state_addr_14" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 370 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>

State 20 <SV = 19> <Delay = 2.32>
ST_20 : Operation 371 [1/1] (0.00ns)   --->   "%specloopname_ln54 = specloopname void @_ssdm_op_SpecLoopName, void @empty_7" [hw-impl/src/pynqrypt.cpp:54]   --->   Operation 371 'specloopname' 'specloopname_ln54' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 372 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_4, i4 %state_addr_13" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 372 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_20 : Operation 373 [1/1] (2.32ns)   --->   "%store_ln222 = store i8 %xor_ln222_5, i4 %state_addr_12" [hw-impl/src/pynqrypt.cpp:222]   --->   Operation 373 'store' 'store_ln222' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 16> <RAM>
ST_20 : Operation 374 [1/1] (0.00ns)   --->   "%br_ln54 = br void %for.inc" [hw-impl/src/pynqrypt.cpp:54]   --->   Operation 374 'br' 'br_ln54' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.32ns
The critical path consists of the following:
	'alloca' operation ('i') [4]  (0 ns)
	'load' operation ('round_key_index', hw-impl/src/pynqrypt.cpp:54) on local variable 'i' [8]  (0 ns)
	'add' operation ('add_ln54', hw-impl/src/pynqrypt.cpp:54) [307]  (1.74 ns)
	'store' operation ('store_ln54', hw-impl/src/pynqrypt.cpp:54) of variable 'add_ln54', hw-impl/src/pynqrypt.cpp:54 on local variable 'i' [308]  (1.59 ns)

 <State 2>: 5.58ns
The critical path consists of the following:
	'load' operation ('state_load_12', hw-impl/src/pynqrypt.cpp:69) on array 'state' [79]  (2.32 ns)
	'getelementptr' operation ('crypto_aes_sbox_addr_12', hw-impl/src/pynqrypt.cpp:69) [81]  (0 ns)
	'load' operation ('crypto_aes_sbox_load_12', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [82]  (3.25 ns)

 <State 3>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('crypto_aes_sbox_addr_1', hw-impl/src/pynqrypt.cpp:69) [37]  (0 ns)
	'load' operation ('crypto_aes_sbox_load_1', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [38]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_1', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [38]  (3.25 ns)

 <State 5>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('crypto_aes_sbox_addr_6', hw-impl/src/pynqrypt.cpp:69) [57]  (0 ns)
	'load' operation ('crypto_aes_sbox_load_6', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [58]  (3.25 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_6', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [58]  (3.25 ns)

 <State 7>: 4.5ns
The critical path consists of the following:
	'xor' operation ('xor_ln101_9', hw-impl/src/pynqrypt.cpp:101) [149]  (0.99 ns)
	'xor' operation ('xor_ln222_57', hw-impl/src/pynqrypt.cpp:222) [296]  (0 ns)
	'xor' operation ('xor_ln222_16', hw-impl/src/pynqrypt.cpp:222) [297]  (1.19 ns)
	'store' operation ('store_ln222', hw-impl/src/pynqrypt.cpp:222) of variable 'xor_ln222_16', hw-impl/src/pynqrypt.cpp:222 on array 'state' [298]  (2.32 ns)

 <State 8>: 3.25ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_2', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [42]  (3.25 ns)

 <State 9>: 6.76ns
The critical path consists of the following:
	'load' operation ('pynqrypt_round_keys_load_30', hw-impl/src/pynqrypt.cpp:222) on array 'pynqrypt_round_keys' [302]  (3.25 ns)
	'xor' operation ('xor_ln222_58', hw-impl/src/pynqrypt.cpp:222) [303]  (0 ns)
	'xor' operation ('xor_ln222_17', hw-impl/src/pynqrypt.cpp:222) [305]  (1.19 ns)
	'store' operation ('store_ln222', hw-impl/src/pynqrypt.cpp:222) of variable 'xor_ln222_17', hw-impl/src/pynqrypt.cpp:222 on array 'state' [306]  (2.32 ns)

 <State 10>: 5.43ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_7', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [62]  (3.25 ns)
	'xor' operation ('xor_ln101_8', hw-impl/src/pynqrypt.cpp:101) [133]  (0.99 ns)
	'xor' operation ('xor_ln222_39', hw-impl/src/pynqrypt.cpp:222) [242]  (0 ns)
	'xor' operation ('xor_ln222_40', hw-impl/src/pynqrypt.cpp:222) [243]  (0 ns)
	'xor' operation ('xor_ln222_10', hw-impl/src/pynqrypt.cpp:222) [244]  (1.19 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('crypto_aes_sbox_addr_3', hw-impl/src/pynqrypt.cpp:69) [45]  (0 ns)
	'load' operation ('crypto_aes_sbox_load_3', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [46]  (3.25 ns)

 <State 12>: 3.25ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_3', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [46]  (3.25 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('crypto_aes_sbox_addr_4', hw-impl/src/pynqrypt.cpp:69) [49]  (0 ns)
	'load' operation ('crypto_aes_sbox_load_4', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [50]  (3.25 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('crypto_aes_sbox_addr', hw-impl/src/pynqrypt.cpp:69) [33]  (0 ns)
	'load' operation ('crypto_aes_sbox_load', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [34]  (3.25 ns)

 <State 15>: 6.48ns
The critical path consists of the following:
	'xor' operation ('xor_ln101_3', hw-impl/src/pynqrypt.cpp:101) [113]  (0.99 ns)
	'xor' operation ('xor_ln101_4', hw-impl/src/pynqrypt.cpp:101) [114]  (0.99 ns)
	'xor' operation ('xor_ln101_5', hw-impl/src/pynqrypt.cpp:101) [115]  (0.99 ns)
	'xor' operation ('xor_ln222_28', hw-impl/src/pynqrypt.cpp:222) [207]  (0 ns)
	'xor' operation ('xor_ln222_29', hw-impl/src/pynqrypt.cpp:222) [208]  (0 ns)
	'xor' operation ('xor_ln222_6', hw-impl/src/pynqrypt.cpp:222) [209]  (1.19 ns)
	'store' operation ('store_ln222', hw-impl/src/pynqrypt.cpp:222) of variable 'xor_ln222_6', hw-impl/src/pynqrypt.cpp:222 on array 'state' [210]  (2.32 ns)

 <State 16>: 3.25ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_5', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [54]  (3.25 ns)

 <State 17>: 3.25ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_10', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [74]  (3.25 ns)

 <State 18>: 5.43ns
The critical path consists of the following:
	'load' operation ('crypto_aes_sbox_load_15', hw-impl/src/pynqrypt.cpp:69) on array 'crypto_aes_sbox' [94]  (3.25 ns)
	'xor' operation ('xor_ln101_2', hw-impl/src/pynqrypt.cpp:101) [97]  (0.99 ns)
	'xor' operation ('xor_ln222_1', hw-impl/src/pynqrypt.cpp:222) [172]  (0 ns)
	'xor' operation ('xor_ln222_18', hw-impl/src/pynqrypt.cpp:222) [173]  (0 ns)
	'xor' operation ('xor_ln222_2', hw-impl/src/pynqrypt.cpp:222) [174]  (1.19 ns)

 <State 19>: 2.32ns
The critical path consists of the following:
	'store' operation ('store_ln222', hw-impl/src/pynqrypt.cpp:222) of variable 'xor_ln222_2', hw-impl/src/pynqrypt.cpp:222 on array 'state' [175]  (2.32 ns)

 <State 20>: 2.32ns
The critical path consists of the following:
	'store' operation ('store_ln222', hw-impl/src/pynqrypt.cpp:222) of variable 'xor_ln222_4', hw-impl/src/pynqrypt.cpp:222 on array 'state' [193]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
