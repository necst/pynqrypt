// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pynqrypt_encrypt_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_round_key_V_1_reload,
        this_round_keys_address0,
        this_round_keys_ce0,
        this_round_keys_we0,
        this_round_keys_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1407:0] p_round_key_V_1_reload;
output  [3:0] this_round_keys_address0;
output   this_round_keys_ce0;
output   this_round_keys_we0;
output  [127:0] this_round_keys_d0;

reg ap_idle;
reg this_round_keys_ce0;
reg this_round_keys_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln179_fu_79_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] tmp_s_reg_212;
reg   [3:0] tmp_s_reg_212_pp0_iter1_reg;
wire   [10:0] shl_ln5_fu_95_p3;
reg   [10:0] shl_ln5_reg_217;
wire   [10:0] or_ln186_fu_103_p2;
reg   [10:0] or_ln186_reg_223;
wire   [10:0] add_ln186_fu_109_p2;
reg   [10:0] add_ln186_reg_228;
wire   [31:0] trunc_ln186_fu_134_p1;
reg   [31:0] trunc_ln186_reg_233;
wire   [31:0] trunc_ln186_1_fu_146_p1;
reg   [31:0] trunc_ln186_1_reg_238;
wire   [31:0] trunc_ln186_2_fu_158_p1;
reg   [31:0] trunc_ln186_2_reg_243;
wire   [31:0] trunc_ln186_3_fu_176_p1;
reg   [31:0] trunc_ln186_3_reg_248;
wire   [63:0] zext_ln186_fu_180_p1;
wire    ap_block_pp0_stage0;
reg   [5:0] i_2_fu_48;
wire   [5:0] add_ln179_fu_115_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i;
wire   [1407:0] zext_ln186_1_fu_126_p1;
wire   [1407:0] lshr_ln186_fu_129_p2;
wire   [1407:0] zext_ln186_2_fu_138_p1;
wire   [1407:0] lshr_ln186_1_fu_141_p2;
wire   [1407:0] zext_ln186_3_fu_150_p1;
wire   [1407:0] lshr_ln186_2_fu_153_p2;
wire   [10:0] or_ln186_1_fu_162_p2;
wire   [1407:0] zext_ln186_4_fu_167_p1;
wire   [1407:0] lshr_ln186_3_fu_171_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

pynqrypt_encrypt_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln179_fu_79_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_2_fu_48 <= add_ln179_fu_115_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_2_fu_48 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln179_fu_79_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln186_reg_228[10 : 6] <= add_ln186_fu_109_p2[10 : 6];
        or_ln186_reg_223[10 : 6] <= or_ln186_fu_103_p2[10 : 6];
        shl_ln5_reg_217[10 : 5] <= shl_ln5_fu_95_p3[10 : 5];
        tmp_s_reg_212 <= {{ap_sig_allocacmp_i[5:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        tmp_s_reg_212_pp0_iter1_reg <= tmp_s_reg_212;
        trunc_ln186_1_reg_238 <= trunc_ln186_1_fu_146_p1;
        trunc_ln186_2_reg_243 <= trunc_ln186_2_fu_158_p1;
        trunc_ln186_3_reg_248 <= trunc_ln186_3_fu_176_p1;
        trunc_ln186_reg_233 <= trunc_ln186_fu_134_p1;
    end
end

always @ (*) begin
    if (((icmp_ln179_fu_79_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 6'd0;
    end else begin
        ap_sig_allocacmp_i = i_2_fu_48;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        this_round_keys_ce0 = 1'b1;
    end else begin
        this_round_keys_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        this_round_keys_we0 = 1'b1;
    end else begin
        this_round_keys_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln179_fu_115_p2 = (ap_sig_allocacmp_i + 6'd4);

assign add_ln186_fu_109_p2 = (or_ln186_fu_103_p2 + 11'd32);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln179_fu_79_p2 = ((ap_sig_allocacmp_i < 6'd44) ? 1'b1 : 1'b0);

assign lshr_ln186_1_fu_141_p2 = p_round_key_V_1_reload >> zext_ln186_2_fu_138_p1;

assign lshr_ln186_2_fu_153_p2 = p_round_key_V_1_reload >> zext_ln186_3_fu_150_p1;

assign lshr_ln186_3_fu_171_p2 = p_round_key_V_1_reload >> zext_ln186_4_fu_167_p1;

assign lshr_ln186_fu_129_p2 = p_round_key_V_1_reload >> zext_ln186_1_fu_126_p1;

assign or_ln186_1_fu_162_p2 = (shl_ln5_reg_217 | 11'd96);

assign or_ln186_fu_103_p2 = (shl_ln5_fu_95_p3 | 11'd32);

assign shl_ln5_fu_95_p3 = {{ap_sig_allocacmp_i}, {5'd0}};

assign this_round_keys_address0 = zext_ln186_fu_180_p1;

assign this_round_keys_d0 = {{{{trunc_ln186_reg_233}, {trunc_ln186_1_reg_238}}, {trunc_ln186_2_reg_243}}, {trunc_ln186_3_reg_248}};

assign trunc_ln186_1_fu_146_p1 = lshr_ln186_1_fu_141_p2[31:0];

assign trunc_ln186_2_fu_158_p1 = lshr_ln186_2_fu_153_p2[31:0];

assign trunc_ln186_3_fu_176_p1 = lshr_ln186_3_fu_171_p2[31:0];

assign trunc_ln186_fu_134_p1 = lshr_ln186_fu_129_p2[31:0];

assign zext_ln186_1_fu_126_p1 = shl_ln5_reg_217;

assign zext_ln186_2_fu_138_p1 = or_ln186_reg_223;

assign zext_ln186_3_fu_150_p1 = add_ln186_reg_228;

assign zext_ln186_4_fu_167_p1 = or_ln186_1_fu_162_p2;

assign zext_ln186_fu_180_p1 = tmp_s_reg_212_pp0_iter1_reg;

always @ (posedge ap_clk) begin
    shl_ln5_reg_217[4:0] <= 5'b00000;
    or_ln186_reg_223[5:0] <= 6'b100000;
    add_ln186_reg_228[5:0] <= 6'b000000;
end

endmodule //pynqrypt_encrypt_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1
