-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pynqrypt_encrypt_aes_generate_round_keys is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (127 downto 0);
    this_round_keys_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    this_round_keys_ce0 : OUT STD_LOGIC;
    this_round_keys_we0 : OUT STD_LOGIC;
    this_round_keys_d0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
end;


architecture behav of pynqrypt_encrypt_aes_generate_round_keys is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv1408_lc_4 : STD_LOGIC_VECTOR (1407 downto

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_round_key_V_fu_107_p5 : STD_LOGIC_VECTOR (1407 downto 0);
    signal p_round_key_V_reg_130 : STD_LOGIC_VECTOR (1407 downto 0);
    signal grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_done : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_idle : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_ready : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_p_round_key_V_1_out : STD_LOGIC_VECTOR (1407 downto 0);
    signal grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_p_round_key_V_1_out_ap_vld : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_idle : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_ready : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_ce0 : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_we0 : STD_LOGIC;
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln628_fu_91_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_81_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_71_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_61_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_95_p5 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component pynqrypt_encrypt_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_round_key_V : IN STD_LOGIC_VECTOR (1407 downto 0);
        p_round_key_V_1_out : OUT STD_LOGIC_VECTOR (1407 downto 0);
        p_round_key_V_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component pynqrypt_encrypt_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_round_key_V_1_reload : IN STD_LOGIC_VECTOR (1407 downto 0);
        this_round_keys_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        this_round_keys_ce0 : OUT STD_LOGIC;
        this_round_keys_we0 : OUT STD_LOGIC;
        this_round_keys_d0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46 : component pynqrypt_encrypt_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start,
        ap_done => grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_done,
        ap_idle => grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_idle,
        ap_ready => grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_ready,
        p_round_key_V => p_round_key_V_reg_130,
        p_round_key_V_1_out => grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_p_round_key_V_1_out,
        p_round_key_V_1_out_ap_vld => grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_p_round_key_V_1_out_ap_vld);

    grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54 : component pynqrypt_encrypt_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start,
        ap_done => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done,
        ap_idle => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_idle,
        ap_ready => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_ready,
        p_round_key_V_1_reload => grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_p_round_key_V_1_out,
        this_round_keys_address0 => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_address0,
        this_round_keys_ce0 => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_ce0,
        this_round_keys_we0 => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_we0,
        this_round_keys_d0 => grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_ready = ap_const_logic_1)) then 
                    grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_ready = ap_const_logic_1)) then 
                    grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                p_round_key_V_reg_130 <= p_round_key_V_fu_107_p5;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_done, grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_done)
    begin
        if ((grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done)
    begin
        if ((grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done, ap_CS_fsm_state4)
    begin
        if ((((grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done, ap_CS_fsm_state4)
    begin
        if (((grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start <= grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_ap_start_reg;
    grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start <= grp_aes_generate_round_keys_Pipeline_loop_aes_generate_round_keys_fu_46_ap_start_reg;
    p_round_key_V_fu_107_p5 <= (ap_const_lv1408_lc_4(1407 downto 128) & tmp_1_fu_95_p5);
    this_round_keys_address0 <= grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_address0;
    this_round_keys_ce0 <= grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_ce0;
    this_round_keys_d0 <= grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_d0;
    this_round_keys_we0 <= grp_aes_generate_round_keys_Pipeline_VITIS_LOOP_179_1_fu_54_this_round_keys_we0;
    tmp3_fu_61_p4 <= p_read(127 downto 96);
    tmp_1_fu_95_p5 <= (((trunc_ln628_fu_91_p1 & tmp_s_fu_81_p4) & tmp_4_fu_71_p4) & tmp3_fu_61_p4);
    tmp_4_fu_71_p4 <= p_read(95 downto 64);
    tmp_s_fu_81_p4 <= p_read(63 downto 32);
    trunc_ln628_fu_91_p1 <= p_read(32 - 1 downto 0);
end behav;
